import{jsx as e,Fragment as t,jsxs as n}from"react/jsx-runtime";import*as s from"react";import{createContext as o,useContext as i,memo as r,useState as a,useRef as l,useEffect as p,PureComponent as h,createRef as d,useMemo as g,Children as u,isValidElement as c,cloneElement as m}from"react";import*as v from"react-dom";import{createPortal as f}from"react-dom";"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;var L=process.env.NODE_ENV,y=function(e,t,n,s,o,i,r,a){if("production"!==L&&void 0===t)throw new Error("invariant requires an error message argument");if(!e){var l;if(void 0===t)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var p=[n,s,o,i,r,a],h=0;(l=new Error(t.replace(/%s/g,(function(){return p[h++]})))).name="Invariant Violation"}throw l.framesToPop=1,l}};const b=o(null);function C(){y(!!i,"useGoogleMap is React hook and requires React version 16.8+");const e=i(b);return y(!!e,"useGoogleMap needs a GoogleMap available up in the tree"),e}function M(e,t,n,s){const o={};var i,r;return i=e,r=(e,i)=>{const r=n[i];r!==t[i]&&(o[i]=r,e(s,r))},Object.keys(i).forEach((e=>r(i[e],e))),o}function x(e,t,n){const s=(o=n,i=function(n,s,o){return"function"==typeof e[o]&&n.push(google.maps.event.addListener(t,s,e[o])),n},r=[],Object.keys(o).reduce((function(e,t){return i(e,o[t],t)}),r));var o,i,r;return s}function k(e){google.maps.event.removeListener(e)}function w(e=[]){e.forEach(k)}function P({updaterMap:e,eventMap:t,prevProps:n,nextProps:s,instance:o}){const i=x(s,o,t);return M(e,n,s,o),i}const S={onDblClick:"dblclick",onDragEnd:"dragend",onDragStart:"dragstart",onMapTypeIdChanged:"maptypeid_changed",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseDown:"mousedown",onMouseUp:"mouseup",onRightClick:"rightclick",onTilesLoaded:"tilesloaded",onBoundsChanged:"bounds_changed",onCenterChanged:"center_changed",onClick:"click",onDrag:"drag",onHeadingChanged:"heading_changed",onIdle:"idle",onProjectionChanged:"projection_changed",onResize:"resize",onTiltChanged:"tilt_changed",onZoomChanged:"zoom_changed"},E={extraMapTypes(e,t){t.forEach((function(t,n){e.mapTypes.set(String(n),t)}))},center(e,t){e.setCenter(t)},clickableIcons(e,t){e.setClickableIcons(t)},heading(e,t){e.setHeading(t)},mapTypeId(e,t){e.setMapTypeId(t)},options(e,t){e.setOptions(t)},streetView(e,t){e.setStreetView(t)},tilt(e,t){e.setTilt(t)},zoom(e,t){e.setZoom(t)}};r((function({children:n,options:s,id:o,mapContainerStyle:i,mapContainerClassName:r,center:h,onClick:d,onDblClick:g,onDrag:u,onDragEnd:c,onDragStart:m,onMouseMove:v,onMouseOut:f,onMouseOver:L,onMouseDown:y,onMouseUp:C,onRightClick:M,onCenterChanged:x,onLoad:k,onUnmount:w}){const[P,S]=a(null),E=l(null),[O,I]=a(null),[D,B]=a(null),[z,T]=a(null),[U,_]=a(null),[R,j]=a(null),[A,Z]=a(null),[W,V]=a(null),[N,H]=a(null),[G,F]=a(null),[$,K]=a(null),[Y,q]=a(null),[J,X]=a(null);return p((()=>{s&&null!==P&&P.setOptions(s)}),[P,s]),p((()=>{null!==P&&void 0!==h&&P.setCenter(h)}),[P,h]),p((()=>{P&&g&&(null!==D&&google.maps.event.removeListener(D),B(google.maps.event.addListener(P,"dblclick",g)))}),[g]),p((()=>{P&&c&&(null!==z&&google.maps.event.removeListener(z),T(google.maps.event.addListener(P,"dragend",c)))}),[c]),p((()=>{P&&m&&(null!==U&&google.maps.event.removeListener(U),_(google.maps.event.addListener(P,"dragstart",m)))}),[m]),p((()=>{P&&y&&(null!==R&&google.maps.event.removeListener(R),j(google.maps.event.addListener(P,"mousedown",y)))}),[y]),p((()=>{P&&v&&(null!==A&&google.maps.event.removeListener(A),Z(google.maps.event.addListener(P,"mousemove",v)))}),[v]),p((()=>{P&&f&&(null!==W&&google.maps.event.removeListener(W),V(google.maps.event.addListener(P,"mouseout",f)))}),[f]),p((()=>{P&&L&&(null!==N&&google.maps.event.removeListener(N),H(google.maps.event.addListener(P,"mouseover",L)))}),[L]),p((()=>{P&&C&&(null!==G&&google.maps.event.removeListener(G),F(google.maps.event.addListener(P,"mouseup",C)))}),[C]),p((()=>{P&&M&&(null!==$&&google.maps.event.removeListener($),K(google.maps.event.addListener(P,"rightclick",M)))}),[M]),p((()=>{P&&d&&(null!==Y&&google.maps.event.removeListener(Y),q(google.maps.event.addListener(P,"click",d)))}),[d]),p((()=>{P&&u&&(null!==J&&google.maps.event.removeListener(J),X(google.maps.event.addListener(P,"drag",u)))}),[u]),p((()=>{P&&x&&(null!==O&&google.maps.event.removeListener(O),I(google.maps.event.addListener(P,"center_changed",x)))}),[d]),p((()=>{const e=null===E.current?null:new google.maps.Map(E.current,s);return S(e),null!==e&&k&&k(e),()=>{null!==e&&w&&w(e)}}),[]),e("div",Object.assign({id:o,ref:E,style:i,className:r},{children:e(b.Provider,Object.assign({value:P},{children:null!==P?n:e(t,{})}))}))}));class O extends h{constructor(){super(...arguments),this.state={map:null},this.registeredEvents=[],this.mapRef=null,this.getInstance=()=>null===this.mapRef?null:new google.maps.Map(this.mapRef,this.props.options),this.panTo=e=>{const t=this.getInstance();t&&t.panTo(e)},this.setMapCallback=()=>{null!==this.state.map&&this.props.onLoad&&this.props.onLoad(this.state.map)},this.getRef=e=>{this.mapRef=e}}componentDidMount(){const e=this.getInstance();this.registeredEvents=P({updaterMap:E,eventMap:S,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{map:e}}),this.setMapCallback)}componentDidUpdate(e){null!==this.state.map&&(w(this.registeredEvents),this.registeredEvents=P({updaterMap:E,eventMap:S,prevProps:e,nextProps:this.props,instance:this.state.map}))}componentWillUnmount(){null!==this.state.map&&(this.props.onUnmount&&this.props.onUnmount(this.state.map),w(this.registeredEvents))}render(){return e("div",Object.assign({id:this.props.id,ref:this.getRef,style:this.props.mapContainerStyle,className:this.props.mapContainerClassName},{children:e(b.Provider,Object.assign({value:this.state.map},{children:null!==this.state.map?this.props.children:e(t,{})}))}))}}
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function I(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(s=Object.getOwnPropertySymbols(e);o<s.length;o++)t.indexOf(s[o])<0&&Object.prototype.propertyIsEnumerable.call(e,s[o])&&(n[s[o]]=e[s[o]])}return n}function D(e,t,n,s){return new(n||(n=Promise))((function(o,i){function r(e){try{l(s.next(e))}catch(e){i(e)}}function a(e){try{l(s.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(r,a)}l((s=s.apply(e,t||[])).next())}))}const B="undefined"!=typeof document;function z({url:e,id:t,nonce:n}){return B?new Promise((function(s,o){const i=document.getElementById(t),r=window;if(i){const n=i.getAttribute("data-state");if(i.src===e&&"error"!==n){if("ready"===n)return s(t);{const e=r.initMap,n=i.onerror;return r.initMap=function(){e&&e(),s(t)},void(i.onerror=function(e){n&&n(e),o(e)})}}i.remove()}const a=document.createElement("script");a.type="text/javascript",a.src=e,a.id=t,a.async=!0,a.nonce=n,a.onerror=function(e){a.setAttribute("data-state","error"),o(e)},r.initMap=function(){a.setAttribute("data-state","ready"),s(t)},document.head.appendChild(a)})).catch((e=>{throw console.error("injectScript error: ",e),e})):Promise.reject(new Error("document is undefined"))}function T(e){const t=e.href;return!(!t||0!==t.indexOf("https://fonts.googleapis.com/css?family=Roboto")&&0!==t.indexOf("https://fonts.googleapis.com/css?family=Google+Sans+Text"))||("style"===e.tagName.toLowerCase()&&e.styleSheet&&e.styleSheet.cssText&&0===e.styleSheet.cssText.replace("\r\n","").indexOf(".gm-style")?(e.styleSheet.cssText="",!0):"style"===e.tagName.toLowerCase()&&e.innerHTML&&0===e.innerHTML.replace("\r\n","").indexOf(".gm-style")?(e.innerHTML="",!0):"style"===e.tagName.toLowerCase()&&!e.styleSheet&&!e.innerHTML)}function U(){const e=document.getElementsByTagName("head")[0],t=e.insertBefore.bind(e);e.insertBefore=function(n,s){T(n)||Reflect.apply(t,e,[n,s])};const n=e.appendChild.bind(e);e.appendChild=function(t){T(t)||Reflect.apply(n,e,[t])}}function _({googleMapsApiKey:e,googleMapsClientId:t,version:n="weekly",language:s,region:o,libraries:i,channel:r,mapIds:a,authReferrerPolicy:l}){const p=[];return y(e&&t||!(e&&t),"You need to specify either googleMapsApiKey or googleMapsClientId for @react-google-maps/api load script to work. You cannot use both at the same time."),e?p.push(`key=${e}`):t&&p.push(`client=${t}`),n&&p.push(`v=${n}`),s&&p.push(`language=${s}`),o&&p.push(`region=${o}`),i&&i.length&&p.push(`libraries=${i.sort().join(",")}`),r&&p.push(`channel=${r}`),a&&a.length&&p.push(`map_ids=${a.join(",")}`),l&&p.push(`auth_referrer_policy=${l}`),p.push("callback=initMap"),`https://maps.googleapis.com/maps/api/js?${p.join("&")}`}let R=!1;function j(){return e("div",{children:"Loading..."})}const A={id:"script-loader",version:"weekly"};class Z extends h{constructor(){super(...arguments),this.check=d(),this.state={loaded:!1},this.cleanupCallback=()=>{delete window.google.maps,this.injectScript()},this.isCleaningUp=()=>D(this,void 0,void 0,(function*(){return new Promise((function(e){if(R){if(B){const t=window.setInterval((function(){R||(window.clearInterval(t),e())}),1)}}else e()}))})),this.cleanup=()=>{R=!0;const e=document.getElementById(this.props.id);e&&e.parentNode&&e.parentNode.removeChild(e),Array.prototype.slice.call(document.getElementsByTagName("script")).filter((function(e){return"string"==typeof e.src&&e.src.includes("maps.googleapis")})).forEach((function(e){e.parentNode&&e.parentNode.removeChild(e)})),Array.prototype.slice.call(document.getElementsByTagName("link")).filter((function(e){return"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Google+Sans"===e.href})).forEach((function(e){e.parentNode&&e.parentNode.removeChild(e)})),Array.prototype.slice.call(document.getElementsByTagName("style")).filter((function(e){return void 0!==e.innerText&&e.innerText.length>0&&e.innerText.includes(".gm-")})).forEach((function(e){e.parentNode&&e.parentNode.removeChild(e)}))},this.injectScript=()=>{this.props.preventGoogleFontsLoading&&U(),y(!!this.props.id,'LoadScript requires "id" prop to be a string: %s',this.props.id);z({id:this.props.id,nonce:this.props.nonce,url:_(this.props)}).then((()=>{this.props.onLoad&&this.props.onLoad(),this.setState((function(){return{loaded:!0}}))})).catch((e=>{this.props.onError&&this.props.onError(e),console.error(`\n          There has been an Error with loading Google Maps API script, please check that you provided correct google API key (${this.props.googleMapsApiKey||"-"}) or Client ID (${this.props.googleMapsClientId||"-"}) to <LoadScript />\n          Otherwise it is a Network issue.\n        `)}))}}componentDidMount(){if(B){if(window.google&&window.google.maps&&!R)return void console.error("google api is already presented");this.isCleaningUp().then(this.injectScript).catch((function(e){console.error("Error at injecting script after cleaning up: ",e)}))}}componentDidUpdate(e){this.props.libraries!==e.libraries&&console.warn("Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables"),B&&e.language!==this.props.language&&(this.cleanup(),this.setState((function(){return{loaded:!1}}),this.cleanupCallback))}componentWillUnmount(){if(B){this.cleanup();const e=()=>{this.check.current||(delete window.google,R=!1)};window.setTimeout(e,1),this.props.onUnmount&&this.props.onUnmount()}}render(){return n(t,{children:[e("div",{ref:this.check}),this.state.loaded?this.props.children:this.props.loadingElement||e(j,{})]})}}let W;function V({id:e=A.id,version:t=A.version,nonce:n,googleMapsApiKey:s,googleMapsClientId:o,language:i,region:r,libraries:h,preventGoogleFontsLoading:d,channel:g,mapIds:u,authReferrerPolicy:c}){const m=l(!1),[v,f]=a(!1),[L,b]=a(void 0);p((function(){return m.current=!0,()=>{m.current=!1}}),[]),p((function(){B&&d&&U()}),[d]),p((function(){v&&y(!!window.google,"useLoadScript was marked as loaded, but window.google is not present. Something went wrong.")}),[v]);const C=_({version:t,googleMapsApiKey:s,googleMapsClientId:o,language:i,region:r,libraries:h,channel:g,mapIds:u,authReferrerPolicy:c});p((function(){function t(){m.current&&(f(!0),W=C)}B&&(window.google&&window.google.maps&&W===C?t():z({id:e,url:C,nonce:n}).then(t).catch((function(e){m.current&&b(e),console.warn(`\n        There has been an Error with loading Google Maps API script, please check that you provided correct google API key (${s||"-"}) or Client ID (${o||"-"})\n        Otherwise it is a Network issue.\n      `),console.error(e)})))}),[e,C,n]);const M=l();return p((function(){M.current&&h!==M.current&&console.warn("Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables"),M.current=h}),[h]),{isLoaded:v,loadError:L,url:C}}Z.defaultProps=A;const N=e(j,{});var H=r((function(e){var{loadingElement:t,onLoad:n,onError:s,onUnmount:o,children:i}=e,r=I(e,["loadingElement","onLoad","onError","onUnmount","children"]);const{isLoaded:a,loadError:l}=V(r);return p((function(){a&&"function"==typeof n&&n()}),[a,n]),p((function(){l&&"function"==typeof s&&s(l)}),[l,s]),p((function(){return()=>{o&&o()}}),[o]),a?i:t||N})),G=function e(t,n){if(t===n)return!0;if(t&&n&&"object"==typeof t&&"object"==typeof n){if(t.constructor!==n.constructor)return!1;var s,o,i;if(Array.isArray(t)){if((s=t.length)!=n.length)return!1;for(o=s;0!=o--;)if(!e(t[o],n[o]))return!1;return!0}if(t.constructor===RegExp)return t.source===n.source&&t.flags===n.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===n.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===n.toString();if((s=(i=Object.keys(t)).length)!==Object.keys(n).length)return!1;for(o=s;0!=o--;)if(!Object.prototype.hasOwnProperty.call(n,i[o]))return!1;for(o=s;0!=o--;){var r=i[o];if(!e(t[r],n[r]))return!1}return!0}return t!=t&&n!=n};var F;!function(e){e[e.INITIALIZED=0]="INITIALIZED",e[e.LOADING=1]="LOADING",e[e.SUCCESS=2]="SUCCESS",e[e.FAILURE=3]="FAILURE"}(F||(F={}));class ${constructor({apiKey:e,authReferrerPolicy:t,channel:n,client:s,id:o="__googleMapsScriptId",language:i,libraries:r=[],mapIds:a,nonce:l,region:p,retries:h=3,url:d="https://maps.googleapis.com/maps/api/js",version:g}){if(this.CALLBACK="__googleMapsCallback",this.callbacks=[],this.done=!1,this.loading=!1,this.errors=[],this.apiKey=e,this.authReferrerPolicy=t,this.channel=n,this.client=s,this.id=o||"__googleMapsScriptId",this.language=i,this.libraries=r,this.mapIds=a,this.nonce=l,this.region=p,this.retries=h,this.url=d,this.version=g,$.instance){if(!G(this.options,$.instance.options))throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify($.instance.options)}`);return $.instance}$.instance=this}get options(){return{version:this.version,apiKey:this.apiKey,channel:this.channel,client:this.client,id:this.id,libraries:this.libraries,language:this.language,region:this.region,mapIds:this.mapIds,nonce:this.nonce,url:this.url,authReferrerPolicy:this.authReferrerPolicy}}get status(){return this.errors.length?F.FAILURE:this.done?F.SUCCESS:this.loading?F.LOADING:F.INITIALIZED}get failed(){return this.done&&!this.loading&&this.errors.length>=this.retries+1}createUrl(){let e=this.url;return e+=`?callback=${this.CALLBACK}`,this.apiKey&&(e+=`&key=${this.apiKey}`),this.channel&&(e+=`&channel=${this.channel}`),this.client&&(e+=`&client=${this.client}`),this.libraries.length>0&&(e+=`&libraries=${this.libraries.join(",")}`),this.language&&(e+=`&language=${this.language}`),this.region&&(e+=`&region=${this.region}`),this.version&&(e+=`&v=${this.version}`),this.mapIds&&(e+=`&map_ids=${this.mapIds.join(",")}`),this.authReferrerPolicy&&(e+=`&auth_referrer_policy=${this.authReferrerPolicy}`),e}deleteScript(){const e=document.getElementById(this.id);e&&e.remove()}load(){return this.loadPromise()}loadPromise(){return new Promise(((e,t)=>{this.loadCallback((n=>{n?t(n.error):e(window.google)}))}))}loadCallback(e){this.callbacks.push(e),this.execute()}setScript(){if(document.getElementById(this.id))return void this.callback();const e=this.createUrl(),t=document.createElement("script");t.id=this.id,t.type="text/javascript",t.src=e,t.onerror=this.loadErrorCallback.bind(this),t.defer=!0,t.async=!0,this.nonce&&(t.nonce=this.nonce),document.head.appendChild(t)}reset(){this.deleteScript(),this.done=!1,this.loading=!1,this.errors=[],this.onerrorEvent=null}resetIfRetryingFailed(){this.failed&&this.reset()}loadErrorCallback(e){if(this.errors.push(e),this.errors.length<=this.retries){const e=this.errors.length*Math.pow(2,this.errors.length);console.log(`Failed to load Google Maps script, retrying in ${e} ms.`),setTimeout((()=>{this.deleteScript(),this.setScript()}),e)}else this.onerrorEvent=e,this.callback()}setCallback(){window.__googleMapsCallback=this.callback.bind(this)}callback(){this.done=!0,this.loading=!1,this.callbacks.forEach((e=>{e(this.onerrorEvent)})),this.callbacks=[]}execute(){if(this.resetIfRetryingFailed(),this.done)this.callback();else{if(window.google&&window.google.maps&&window.google.maps.version)return console.warn("Google Maps already loaded outside @googlemaps/js-api-loader.This may result in undesirable behavior as options and script parameters may not match."),void this.callback();this.loading||(this.loading=!0,this.setCallback(),this.setScript())}}}function K({id:e=A.id,version:t=A.version,nonce:n,googleMapsApiKey:s,language:o,region:i,libraries:r,preventGoogleFontsLoading:h,mapIds:d,authReferrerPolicy:u}){const c=l(!1),[m,v]=a(!1),[f,L]=a(void 0);p((function(){return c.current=!0,()=>{c.current=!1}}),[]);const y=g((function(){return new $({id:e,apiKey:s,version:t,libraries:r,language:o,region:i,mapIds:d,nonce:n,authReferrerPolicy:u})}),[e,s,t,r,o,i,d,n,u]);p((function(){m||y.load().then((function(){c.current&&v(!0)})).catch((function(e){L(e)}))}),[]),p((function(){B&&h&&U()}),[h]);const b=l();return p((function(){b.current&&r!==b.current&&console.warn("Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables"),b.current=r}),[r]),{isLoaded:m,loadError:f}}const Y={},q={options(e,t){e.setOptions(t)}};const J=r((function({options:e,onLoad:t,onUnmount:n}){const s=i(b),[o,r]=a(null);return p((()=>{null!==o&&o.setMap(s)}),[s]),p((()=>{e&&null!==o&&o.setOptions(e)}),[o,e]),p((()=>{const i=new google.maps.TrafficLayer(Object.assign(Object.assign({},e||{}),{map:s}));return r(i),t&&t(i),()=>{null!==o&&(n&&n(o),o.setMap(null))}}),[]),null}));class X extends h{constructor(){super(...arguments),this.state={trafficLayer:null},this.setTrafficLayerCallback=()=>{null!==this.state.trafficLayer&&this.props.onLoad&&this.props.onLoad(this.state.trafficLayer)},this.registeredEvents=[]}componentDidMount(){const e=new google.maps.TrafficLayer(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=P({updaterMap:q,eventMap:Y,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{trafficLayer:e}}),this.setTrafficLayerCallback)}componentDidUpdate(e){null!==this.state.trafficLayer&&(w(this.registeredEvents),this.registeredEvents=P({updaterMap:q,eventMap:Y,prevProps:e,nextProps:this.props,instance:this.state.trafficLayer}))}componentWillUnmount(){null!==this.state.trafficLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.trafficLayer),w(this.registeredEvents),this.state.trafficLayer.setMap(null))}render(){return null}}X.contextType=b;const Q=r((function({onLoad:e,onUnmount:t}){const n=i(b),[s,o]=a(null);return p((()=>{null!==s&&s.setMap(n)}),[n]),p((()=>{const s=new google.maps.BicyclingLayer;return o(s),s.setMap(n),e&&e(s),()=>{null!==s&&(t&&t(s),s.setMap(null))}}),[]),null}));class ee extends h{constructor(){super(...arguments),this.state={bicyclingLayer:null},this.setBicyclingLayerCallback=()=>{null!==this.state.bicyclingLayer&&(this.state.bicyclingLayer.setMap(this.context),this.props.onLoad&&this.props.onLoad(this.state.bicyclingLayer))}}componentDidMount(){const e=new google.maps.BicyclingLayer;this.setState((()=>({bicyclingLayer:e})),this.setBicyclingLayerCallback)}componentWillUnmount(){null!==this.state.bicyclingLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.bicyclingLayer),this.state.bicyclingLayer.setMap(null))}render(){return null}}ee.contextType=b;const te=r((function({onLoad:e,onUnmount:t}){const n=i(b),[s,o]=a(null);return p((()=>{null!==s&&s.setMap(n)}),[n]),p((()=>{const i=new google.maps.TransitLayer;return o(i),i.setMap(n),e&&e(i),()=>{null!==s&&(t&&t(s),this.state.transitLayer.setMap(null))}}),[]),null}));class ne extends h{constructor(){super(...arguments),this.state={transitLayer:null},this.setTransitLayerCallback=()=>{null!==this.state.transitLayer&&(this.state.transitLayer.setMap(this.context),this.props.onLoad&&this.props.onLoad(this.state.transitLayer))}}componentDidMount(){const e=new google.maps.TransitLayer;this.setState((function(){return{transitLayer:e}}),this.setTransitLayerCallback)}componentWillUnmount(){null!==this.state.transitLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.transitLayer),this.state.transitLayer.setMap(null))}render(){return null}}ne.contextType=b;const se={onCircleComplete:"circlecomplete",onMarkerComplete:"markercomplete",onOverlayComplete:"overlaycomplete",onPolygonComplete:"polygoncomplete",onPolylineComplete:"polylinecomplete",onRectangleComplete:"rectanglecomplete"},oe={drawingMode(e,t){e.setDrawingMode(t)},options(e,t){e.setOptions(t)}};const ie=r((function({options:e,drawingMode:t,onCircleComplete:n,onMarkerComplete:s,onOverlayComplete:o,onPolygonComplete:r,onPolylineComplete:l,onRectangleComplete:h,onLoad:d,onUnmount:g}){const u=i(b),[c,m]=a(null),[v,f]=a(null),[L,C]=a(null),[M,x]=a(null),[k,w]=a(null),[P,S]=a(null),[E,O]=a(null);return p((()=>{null!==c&&c.setMap(u)}),[u]),p((()=>{e&&null!==c&&c.setOptions(e)}),[c,e]),p((()=>{t&&null!==c&&c.setDrawingMode(t)}),[c,t]),p((()=>{c&&n&&(null!==v&&google.maps.event.removeListener(v),f(google.maps.event.addListener(c,"circlecomplete",n)))}),[c,n]),p((()=>{c&&s&&(null!==L&&google.maps.event.removeListener(L),C(google.maps.event.addListener(c,"markercomplete",s)))}),[c,s]),p((()=>{c&&o&&(null!==M&&google.maps.event.removeListener(M),x(google.maps.event.addListener(c,"overlaycomplete",o)))}),[c,o]),p((()=>{c&&r&&(null!==k&&google.maps.event.removeListener(k),w(google.maps.event.addListener(c,"polygoncomplete",r)))}),[c,r]),p((()=>{c&&l&&(null!==P&&google.maps.event.removeListener(P),S(google.maps.event.addListener(c,"polylinecomplete",l)))}),[c,l]),p((()=>{c&&h&&(null!==E&&google.maps.event.removeListener(E),O(google.maps.event.addListener(c,"rectanglecomplete",h)))}),[c,h]),p((()=>{y(!!google.maps.drawing,"Did you include prop libraries={['drawing']} in the URL? %s",google.maps.drawing);const i=new google.maps.drawing.DrawingManager(Object.assign(Object.assign({},e||{}),{map:u}));return t&&i.setDrawingMode(t),n&&f(google.maps.event.addListener(i,"circlecomplete",n)),s&&C(google.maps.event.addListener(i,"markercomplete",s)),o&&x(google.maps.event.addListener(i,"overlaycomplete",o)),r&&w(google.maps.event.addListener(i,"polygoncomplete",r)),l&&S(google.maps.event.addListener(i,"polylinecomplete",l)),h&&O(google.maps.event.addListener(i,"rectanglecomplete",h)),m(i),d&&d(i),()=>{null!==c&&(v&&google.maps.event.removeListener(v),L&&google.maps.event.removeListener(L),M&&google.maps.event.removeListener(M),k&&google.maps.event.removeListener(k),P&&google.maps.event.removeListener(P),E&&google.maps.event.removeListener(E),g&&g(c),c.setMap(null))}}),[]),null}));class re extends h{constructor(e){super(e),this.registeredEvents=[],this.state={drawingManager:null},this.setDrawingManagerCallback=()=>{null!==this.state.drawingManager&&this.props.onLoad&&this.props.onLoad(this.state.drawingManager)},y(!!google.maps.drawing,"Did you include prop libraries={['drawing']} in the URL? %s",google.maps.drawing)}componentDidMount(){const e=new google.maps.drawing.DrawingManager(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=P({updaterMap:oe,eventMap:se,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{drawingManager:e}}),this.setDrawingManagerCallback)}componentDidUpdate(e){null!==this.state.drawingManager&&(w(this.registeredEvents),this.registeredEvents=P({updaterMap:oe,eventMap:se,prevProps:e,nextProps:this.props,instance:this.state.drawingManager}))}componentWillUnmount(){null!==this.state.drawingManager&&(this.props.onUnmount&&this.props.onUnmount(this.state.drawingManager),w(this.registeredEvents),this.state.drawingManager.setMap(null))}render(){return null}}re.contextType=b;const ae={onAnimationChanged:"animation_changed",onClick:"click",onClickableChanged:"clickable_changed",onCursorChanged:"cursor_changed",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDraggableChanged:"draggable_changed",onDragStart:"dragstart",onFlatChanged:"flat_changed",onIconChanged:"icon_changed",onMouseDown:"mousedown",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onPositionChanged:"position_changed",onRightClick:"rightclick",onShapeChanged:"shape_changed",onTitleChanged:"title_changed",onVisibleChanged:"visible_changed",onZindexChanged:"zindex_changed"},le={animation(e,t){e.setAnimation(t)},clickable(e,t){e.setClickable(t)},cursor(e,t){e.setCursor(t)},draggable(e,t){e.setDraggable(t)},icon(e,t){e.setIcon(t)},label(e,t){e.setLabel(t)},map(e,t){e.setMap(t)},opacity(e,t){e.setOpacity(t)},options(e,t){e.setOptions(t)},position(e,t){e.setPosition(t)},shape(e,t){e.setShape(t)},title(e,t){e.setTitle(t)},visible(e,t){e.setVisible(t)},zIndex(e,t){e.setZIndex(t)}},pe={};const he=r((function({position:n,options:s,clusterer:o,noClustererRedraw:r,children:l,draggable:h,visible:d,animation:v,clickable:f,cursor:L,icon:y,label:C,opacity:M,shape:x,title:k,zIndex:w,onClick:P,onDblClick:S,onDrag:E,onDragEnd:O,onDragStart:I,onMouseOut:D,onMouseOver:B,onMouseUp:z,onMouseDown:T,onRightClick:U,onClickableChanged:_,onCursorChanged:R,onAnimationChanged:j,onDraggableChanged:A,onFlatChanged:Z,onIconChanged:W,onPositionChanged:V,onShapeChanged:N,onTitleChanged:H,onVisibleChanged:G,onZindexChanged:F,onLoad:$,onUnmount:K}){const Y=i(b),[q,J]=a(null),[X,Q]=a(null),[ee,te]=a(null),[ne,se]=a(null),[oe,ie]=a(null),[re,ae]=a(null),[le,he]=a(null),[de,ge]=a(null),[ue,ce]=a(null),[me,ve]=a(null),[fe,Le]=a(null),[ye,be]=a(null),[Ce,Me]=a(null),[xe,ke]=a(null),[we,Pe]=a(null),[Se,Ee]=a(null),[Oe,Ie]=a(null),[De,Be]=a(null),[ze,Te]=a(null),[Ue,_e]=a(null),[Re,je]=a(null),[Ae,Ze]=a(null);p((()=>{null!==q&&q.setMap(Y)}),[Y]),p((()=>{void 0!==s&&null!==q&&q.setOptions(s)}),[q,s]),p((()=>{void 0!==h&&null!==q&&q.setDraggable(h)}),[q,h]),p((()=>{n&&null!==q&&q.setPosition(n)}),[q,n]),p((()=>{void 0!==d&&null!==q&&q.setVisible(d)}),[q,d]),p((()=>{v&&null!==q&&q.setAnimation(v)}),[q,v]),p((()=>{q&&S&&(null!==X&&google.maps.event.removeListener(X),Q(google.maps.event.addListener(q,"dblclick",S)))}),[S]),p((()=>{q&&O&&(null!==ee&&google.maps.event.removeListener(ee),te(google.maps.event.addListener(q,"dragend",O)))}),[O]),p((()=>{q&&I&&(null!==ne&&google.maps.event.removeListener(ne),se(google.maps.event.addListener(q,"dragstart",I)))}),[I]),p((()=>{q&&T&&(null!==oe&&google.maps.event.removeListener(oe),ie(google.maps.event.addListener(q,"mousedown",T)))}),[T]),p((()=>{q&&D&&(null!==re&&google.maps.event.removeListener(re),ae(google.maps.event.addListener(q,"mouseout",D)))}),[D]),p((()=>{q&&B&&(null!==le&&google.maps.event.removeListener(le),he(google.maps.event.addListener(q,"mouseover",B)))}),[B]),p((()=>{q&&z&&(null!==de&&google.maps.event.removeListener(de),ge(google.maps.event.addListener(q,"mouseup",z)))}),[z]),p((()=>{q&&U&&(null!==ue&&google.maps.event.removeListener(ue),ce(google.maps.event.addListener(q,"rightclick",U)))}),[U]),p((()=>{q&&P&&(null!==me&&google.maps.event.removeListener(me),ve(google.maps.event.addListener(q,"click",P)))}),[P]),p((()=>{q&&E&&(null!==fe&&google.maps.event.removeListener(fe),Le(google.maps.event.addListener(q,"drag",E)))}),[E]),p((()=>{q&&_&&(null!==ye&&google.maps.event.removeListener(ye),be(google.maps.event.addListener(q,"clickable_changed",_)))}),[_]),p((()=>{q&&R&&(null!==Ce&&google.maps.event.removeListener(Ce),Me(google.maps.event.addListener(q,"cursor_changed",R)))}),[R]),p((()=>{q&&j&&(null!==xe&&google.maps.event.removeListener(xe),ke(google.maps.event.addListener(q,"animation_changed",j)))}),[j]),p((()=>{q&&A&&(null!==we&&google.maps.event.removeListener(we),Pe(google.maps.event.addListener(q,"draggable_changed",A)))}),[A]),p((()=>{q&&Z&&(null!==Se&&google.maps.event.removeListener(Se),Ee(google.maps.event.addListener(q,"flat_changed",Z)))}),[Z]),p((()=>{q&&W&&(null!==Oe&&google.maps.event.removeListener(Oe),Ie(google.maps.event.addListener(q,"icon_changed",W)))}),[W]),p((()=>{q&&V&&(null!==De&&google.maps.event.removeListener(De),Be(google.maps.event.addListener(q,"position_changed",V)))}),[V]),p((()=>{q&&N&&(null!==ze&&google.maps.event.removeListener(ze),Te(google.maps.event.addListener(q,"shape_changed",N)))}),[N]),p((()=>{q&&H&&(null!==Ue&&google.maps.event.removeListener(Ue),_e(google.maps.event.addListener(q,"title_changed",H)))}),[H]),p((()=>{q&&G&&(null!==Re&&google.maps.event.removeListener(Re),je(google.maps.event.addListener(q,"visible_changed",G)))}),[G]),p((()=>{q&&F&&(null!==Ae&&google.maps.event.removeListener(Ae),Ze(google.maps.event.addListener(q,"zindex_changed",F)))}),[F]),p((()=>{const e=Object.assign(Object.assign(Object.assign({},s||pe),o?pe:{map:Y}),{position:n}),t=new google.maps.Marker(e);return o?o.addMarker(t,!!r):t.setMap(Y),n&&t.setPosition(n),void 0!==d&&t.setVisible(d),void 0!==h&&t.setDraggable(h),void 0!==f&&t.setClickable(f),"string"==typeof L&&t.setCursor(L),y&&t.setIcon(y),void 0!==C&&t.setLabel(C),void 0!==M&&t.setOpacity(M),x&&t.setShape(x),"string"==typeof k&&t.setTitle(k),"number"==typeof w&&t.setZIndex(w),S&&Q(google.maps.event.addListener(t,"dblclick",S)),O&&te(google.maps.event.addListener(t,"dragend",O)),I&&se(google.maps.event.addListener(t,"dragstart",I)),T&&ie(google.maps.event.addListener(t,"mousedown",T)),D&&ae(google.maps.event.addListener(t,"mouseout",D)),B&&he(google.maps.event.addListener(t,"mouseover",B)),z&&ge(google.maps.event.addListener(t,"mouseup",z)),U&&ce(google.maps.event.addListener(t,"rightclick",U)),P&&ve(google.maps.event.addListener(t,"click",P)),E&&Le(google.maps.event.addListener(t,"drag",E)),_&&be(google.maps.event.addListener(t,"clickable_changed",_)),R&&Me(google.maps.event.addListener(t,"cursor_changed",R)),j&&ke(google.maps.event.addListener(t,"animation_changed",j)),A&&Pe(google.maps.event.addListener(t,"draggable_changed",A)),Z&&Ee(google.maps.event.addListener(t,"flat_changed",Z)),W&&Ie(google.maps.event.addListener(t,"icon_changed",W)),V&&Be(google.maps.event.addListener(t,"position_changed",V)),N&&Te(google.maps.event.addListener(t,"shape_changed",N)),H&&_e(google.maps.event.addListener(t,"title_changed",H)),G&&je(google.maps.event.addListener(t,"visible_changed",G)),F&&Ze(google.maps.event.addListener(t,"zindex_changed",F)),J(t),$&&$(t),()=>{null!==X&&google.maps.event.removeListener(X),null!==ee&&google.maps.event.removeListener(ee),null!==ne&&google.maps.event.removeListener(ne),null!==oe&&google.maps.event.removeListener(oe),null!==re&&google.maps.event.removeListener(re),null!==le&&google.maps.event.removeListener(le),null!==de&&google.maps.event.removeListener(de),null!==ue&&google.maps.event.removeListener(ue),null!==me&&google.maps.event.removeListener(me),null!==ye&&google.maps.event.removeListener(ye),null!==Ce&&google.maps.event.removeListener(Ce),null!==xe&&google.maps.event.removeListener(xe),null!==we&&google.maps.event.removeListener(we),null!==Se&&google.maps.event.removeListener(Se),null!==Oe&&google.maps.event.removeListener(Oe),null!==De&&google.maps.event.removeListener(De),null!==Ue&&google.maps.event.removeListener(Ue),null!==Re&&google.maps.event.removeListener(Re),null!==Ae&&google.maps.event.removeListener(Ae),K&&K(t),o?o.removeMarker(t,!!r):t&&t.setMap(null)}}),[]);const We=g((()=>l?u.map(l,(e=>{if(!c(e))return e;return m(e,{anchor:q})})):null),[l,q]);return e(t,{children:We})||null}));class de extends h{constructor(){super(...arguments),this.registeredEvents=[]}componentDidMount(){const e=Object.assign(Object.assign(Object.assign({},this.props.options||pe),this.props.clusterer?pe:{map:this.context}),{position:this.props.position});this.marker=new google.maps.Marker(e),this.props.clusterer?this.props.clusterer.addMarker(this.marker,!!this.props.noClustererRedraw):this.marker.setMap(this.context),this.registeredEvents=P({updaterMap:le,eventMap:ae,prevProps:{},nextProps:this.props,instance:this.marker}),this.props.onLoad&&this.props.onLoad(this.marker)}componentDidUpdate(e){this.marker&&(w(this.registeredEvents),this.registeredEvents=P({updaterMap:le,eventMap:ae,prevProps:e,nextProps:this.props,instance:this.marker}))}componentWillUnmount(){this.marker&&(this.props.onUnmount&&this.props.onUnmount(this.marker),w(this.registeredEvents),this.props.clusterer?this.props.clusterer.removeMarker(this.marker,!!this.props.noClustererRedraw):this.marker&&this.marker.setMap(null))}render(){let e=null;return this.props.children&&(e=u.map(this.props.children,(e=>{if(!c(e))return e;return m(e,{anchor:this.marker})}))),e||null}}de.contextType=b;var ge=function(){function e(t,n){t.getClusterer().extend(e,google.maps.OverlayView),this.cluster=t,this.clusterClassName=this.cluster.getClusterer().getClusterClass(),this.className=this.clusterClassName,this.styles=n,this.center=void 0,this.div=null,this.sums=null,this.visible=!1,this.boundsChangedListener=null,this.url="",this.height=0,this.width=0,this.anchorText=[0,0],this.anchorIcon=[0,0],this.textColor="black",this.textSize=11,this.textDecoration="none",this.fontWeight="bold",this.fontStyle="normal",this.fontFamily="Arial,sans-serif",this.backgroundPosition="0 0",this.cMouseDownInCluster=null,this.cDraggingMapByCluster=null,this.timeOut=null,this.setMap(t.getMap()),this.onBoundsChanged=this.onBoundsChanged.bind(this),this.onMouseDown=this.onMouseDown.bind(this),this.onClick=this.onClick.bind(this),this.onMouseOver=this.onMouseOver.bind(this),this.onMouseOut=this.onMouseOut.bind(this),this.onAdd=this.onAdd.bind(this),this.onRemove=this.onRemove.bind(this),this.draw=this.draw.bind(this),this.hide=this.hide.bind(this),this.show=this.show.bind(this),this.useStyle=this.useStyle.bind(this),this.setCenter=this.setCenter.bind(this),this.getPosFromLatLng=this.getPosFromLatLng.bind(this)}return e.prototype.onBoundsChanged=function(){this.cDraggingMapByCluster=this.cMouseDownInCluster},e.prototype.onMouseDown=function(){this.cMouseDownInCluster=!0,this.cDraggingMapByCluster=!1},e.prototype.onClick=function(e){if(this.cMouseDownInCluster=!1,!this.cDraggingMapByCluster){var t=this.cluster.getClusterer();if(google.maps.event.trigger(t,"click",this.cluster),google.maps.event.trigger(t,"clusterclick",this.cluster),t.getZoomOnClick()){var n=t.getMaxZoom(),s=this.cluster.getBounds(),o=t.getMap();null!==o&&"fitBounds"in o&&o.fitBounds(s),this.timeOut=window.setTimeout((function(){var e=t.getMap();if(null!==e){"fitBounds"in e&&e.fitBounds(s);var o=e.getZoom()||0;null!==n&&o>n&&e.setZoom(n+1)}}),100)}e.cancelBubble=!0,e.stopPropagation&&e.stopPropagation()}},e.prototype.onMouseOver=function(){google.maps.event.trigger(this.cluster.getClusterer(),"mouseover",this.cluster)},e.prototype.onMouseOut=function(){google.maps.event.trigger(this.cluster.getClusterer(),"mouseout",this.cluster)},e.prototype.onAdd=function(){var e;this.div=document.createElement("div"),this.div.className=this.className,this.visible&&this.show(),null===(e=this.getPanes())||void 0===e||e.overlayMouseTarget.appendChild(this.div);var t=this.getMap();null!==t&&(this.boundsChangedListener=google.maps.event.addListener(t,"bounds_changed",this.onBoundsChanged),this.div.addEventListener("mousedown",this.onMouseDown),this.div.addEventListener("click",this.onClick),this.div.addEventListener("mouseover",this.onMouseOver),this.div.addEventListener("mouseout",this.onMouseOut))},e.prototype.onRemove=function(){this.div&&this.div.parentNode&&(this.hide(),null!==this.boundsChangedListener&&google.maps.event.removeListener(this.boundsChangedListener),this.div.removeEventListener("mousedown",this.onMouseDown),this.div.removeEventListener("click",this.onClick),this.div.removeEventListener("mouseover",this.onMouseOver),this.div.removeEventListener("mouseout",this.onMouseOut),this.div.parentNode.removeChild(this.div),null!==this.timeOut&&(window.clearTimeout(this.timeOut),this.timeOut=null),this.div=null)},e.prototype.draw=function(){if(this.visible&&null!==this.div&&this.center){var e=this.getPosFromLatLng(this.center);this.div.style.top=null!==e?"".concat(e.y,"px"):"0",this.div.style.left=null!==e?"".concat(e.x,"px"):"0"}},e.prototype.hide=function(){this.div&&(this.div.style.display="none"),this.visible=!1},e.prototype.show=function(){var e,t,n,s;if(this.div&&this.center){var o=null===this.sums||void 0===this.sums.title||""===this.sums.title?this.cluster.getClusterer().getTitle():this.sums.title,i=this.backgroundPosition.split(" "),r=parseInt(i[0].replace(/^\s+|\s+$/g,""),10),a=parseInt(i[1].replace(/^\s+|\s+$/g,""),10),l=this.getPosFromLatLng(this.center);this.div.className=this.className,this.div.setAttribute("style","cursor: pointer; position: absolute; top: ".concat(null!==l?"".concat(l.y,"px"):"0","; left: ").concat(null!==l?"".concat(l.x,"px"):"0","; width: ").concat(this.width,"px; height: ").concat(this.height,"px; "));var p=document.createElement("img");p.alt=o,p.src=this.url,p.width=this.width,p.height=this.height,p.setAttribute("style","position: absolute; top: ".concat(a,"px; left: ").concat(r,"px")),this.cluster.getClusterer().enableRetinaIcons||(p.style.clip="rect(-".concat(a,"px, -").concat(r+this.width,"px, -").concat(a+this.height,", -").concat(r,")"));var h=document.createElement("div");h.setAttribute("style","position: absolute; top: ".concat(this.anchorText[0],"px; left: ").concat(this.anchorText[1],"px; color: ").concat(this.textColor,"; font-size: ").concat(this.textSize,"px; font-family: ").concat(this.fontFamily,"; font-weight: ").concat(this.fontWeight,"; fontStyle: ").concat(this.fontStyle,"; text-decoration: ").concat(this.textDecoration,"; text-align: center; width: ").concat(this.width,"px; line-height: ").concat(this.height,"px")),(null===(e=this.sums)||void 0===e?void 0:e.text)&&(h.innerText="".concat(null===(t=this.sums)||void 0===t?void 0:t.text)),(null===(n=this.sums)||void 0===n?void 0:n.html)&&(h.innerHTML="".concat(null===(s=this.sums)||void 0===s?void 0:s.html)),this.div.innerHTML="",this.div.appendChild(p),this.div.appendChild(h),this.div.title=o,this.div.style.display=""}this.visible=!0},e.prototype.useStyle=function(e){this.sums=e;var t=this.cluster.getClusterer().getStyles(),n=t[Math.min(t.length-1,Math.max(0,e.index-1))];this.url=n.url,this.height=n.height,this.width=n.width,n.className&&(this.className="".concat(this.clusterClassName," ").concat(n.className)),this.anchorText=n.anchorText||[0,0],this.anchorIcon=n.anchorIcon||[this.height/2,this.width/2],this.textColor=n.textColor||"black",this.textSize=n.textSize||11,this.textDecoration=n.textDecoration||"none",this.fontWeight=n.fontWeight||"bold",this.fontStyle=n.fontStyle||"normal",this.fontFamily=n.fontFamily||"Arial,sans-serif",this.backgroundPosition=n.backgroundPosition||"0 0"},e.prototype.setCenter=function(e){this.center=e},e.prototype.getPosFromLatLng=function(e){var t=this.getProjection().fromLatLngToDivPixel(e);return null!==t&&(t.x-=this.anchorIcon[1],t.y-=this.anchorIcon[0]),t},e}(),ue=function(){function e(e){this.markerClusterer=e,this.map=this.markerClusterer.getMap(),this.gridSize=this.markerClusterer.getGridSize(),this.minClusterSize=this.markerClusterer.getMinimumClusterSize(),this.averageCenter=this.markerClusterer.getAverageCenter(),this.markers=[],this.center=void 0,this.bounds=null,this.clusterIcon=new ge(this,this.markerClusterer.getStyles()),this.getSize=this.getSize.bind(this),this.getMarkers=this.getMarkers.bind(this),this.getCenter=this.getCenter.bind(this),this.getMap=this.getMap.bind(this),this.getClusterer=this.getClusterer.bind(this),this.getBounds=this.getBounds.bind(this),this.remove=this.remove.bind(this),this.addMarker=this.addMarker.bind(this),this.isMarkerInClusterBounds=this.isMarkerInClusterBounds.bind(this),this.calculateBounds=this.calculateBounds.bind(this),this.updateIcon=this.updateIcon.bind(this),this.isMarkerAlreadyAdded=this.isMarkerAlreadyAdded.bind(this)}return e.prototype.getSize=function(){return this.markers.length},e.prototype.getMarkers=function(){return this.markers},e.prototype.getCenter=function(){return this.center},e.prototype.getMap=function(){return this.map},e.prototype.getClusterer=function(){return this.markerClusterer},e.prototype.getBounds=function(){for(var e=new google.maps.LatLngBounds(this.center,this.center),t=this.getMarkers(),n=0;n<t.length;n++){var s=t[n].getPosition();s&&e.extend(s)}return e},e.prototype.remove=function(){this.clusterIcon.setMap(null),this.markers=[],delete this.markers},e.prototype.addMarker=function(e){var t,n;if(this.isMarkerAlreadyAdded(e))return!1;if(this.center){if(this.averageCenter&&(n=e.getPosition())){var s=this.markers.length+1;this.center=new google.maps.LatLng((this.center.lat()*(s-1)+n.lat())/s,(this.center.lng()*(s-1)+n.lng())/s),this.calculateBounds()}}else(n=e.getPosition())&&(this.center=n,this.calculateBounds());e.isAdded=!0,this.markers.push(e);var o=this.markers.length,i=this.markerClusterer.getMaxZoom(),r=null===(t=this.map)||void 0===t?void 0:t.getZoom();if(null!==i&&void 0!==r&&r>i)e.getMap()!==this.map&&e.setMap(this.map);else if(o<this.minClusterSize)e.getMap()!==this.map&&e.setMap(this.map);else if(o===this.minClusterSize)for(var a=0;a<o;a++)this.markers[a].setMap(null);else e.setMap(null);return!0},e.prototype.isMarkerInClusterBounds=function(e){if(null!==this.bounds){var t=e.getPosition();if(t)return this.bounds.contains(t)}return!1},e.prototype.calculateBounds=function(){this.bounds=this.markerClusterer.getExtendedBounds(new google.maps.LatLngBounds(this.center,this.center))},e.prototype.updateIcon=function(){var e,t=this.markers.length,n=this.markerClusterer.getMaxZoom(),s=null===(e=this.map)||void 0===e?void 0:e.getZoom();null!==n&&void 0!==s&&s>n||t<this.minClusterSize?this.clusterIcon.hide():(this.center&&this.clusterIcon.setCenter(this.center),this.clusterIcon.useStyle(this.markerClusterer.getCalculator()(this.markers,this.markerClusterer.getStyles().length)),this.clusterIcon.show())},e.prototype.isMarkerAlreadyAdded=function(e){if(this.markers.includes)return this.markers.includes(e);for(var t=0;t<this.markers.length;t++)if(e===this.markers[t])return!0;return!1},e}();function ce(e,t){var n=e.length,s=n.toString().length,o=Math.min(s,t);return{text:n.toString(),index:o,title:""}}var me=[53,56,66,78,90],ve=function(){function e(t,n,s){void 0===n&&(n=[]),void 0===s&&(s={}),this.getMinimumClusterSize=this.getMinimumClusterSize.bind(this),this.setMinimumClusterSize=this.setMinimumClusterSize.bind(this),this.getEnableRetinaIcons=this.getEnableRetinaIcons.bind(this),this.setEnableRetinaIcons=this.setEnableRetinaIcons.bind(this),this.addToClosestCluster=this.addToClosestCluster.bind(this),this.getImageExtension=this.getImageExtension.bind(this),this.setImageExtension=this.setImageExtension.bind(this),this.getExtendedBounds=this.getExtendedBounds.bind(this),this.getAverageCenter=this.getAverageCenter.bind(this),this.setAverageCenter=this.setAverageCenter.bind(this),this.getTotalClusters=this.getTotalClusters.bind(this),this.fitMapToMarkers=this.fitMapToMarkers.bind(this),this.getIgnoreHidden=this.getIgnoreHidden.bind(this),this.setIgnoreHidden=this.setIgnoreHidden.bind(this),this.getClusterClass=this.getClusterClass.bind(this),this.setClusterClass=this.setClusterClass.bind(this),this.getTotalMarkers=this.getTotalMarkers.bind(this),this.getZoomOnClick=this.getZoomOnClick.bind(this),this.setZoomOnClick=this.setZoomOnClick.bind(this),this.getBatchSizeIE=this.getBatchSizeIE.bind(this),this.setBatchSizeIE=this.setBatchSizeIE.bind(this),this.createClusters=this.createClusters.bind(this),this.onZoomChanged=this.onZoomChanged.bind(this),this.getImageSizes=this.getImageSizes.bind(this),this.setImageSizes=this.setImageSizes.bind(this),this.getCalculator=this.getCalculator.bind(this),this.setCalculator=this.setCalculator.bind(this),this.removeMarkers=this.removeMarkers.bind(this),this.resetViewport=this.resetViewport.bind(this),this.getImagePath=this.getImagePath.bind(this),this.setImagePath=this.setImagePath.bind(this),this.pushMarkerTo=this.pushMarkerTo.bind(this),this.removeMarker=this.removeMarker.bind(this),this.clearMarkers=this.clearMarkers.bind(this),this.setupStyles=this.setupStyles.bind(this),this.getGridSize=this.getGridSize.bind(this),this.setGridSize=this.setGridSize.bind(this),this.getClusters=this.getClusters.bind(this),this.getMaxZoom=this.getMaxZoom.bind(this),this.setMaxZoom=this.setMaxZoom.bind(this),this.getMarkers=this.getMarkers.bind(this),this.addMarkers=this.addMarkers.bind(this),this.getStyles=this.getStyles.bind(this),this.setStyles=this.setStyles.bind(this),this.addMarker=this.addMarker.bind(this),this.onRemove=this.onRemove.bind(this),this.getTitle=this.getTitle.bind(this),this.setTitle=this.setTitle.bind(this),this.repaint=this.repaint.bind(this),this.onIdle=this.onIdle.bind(this),this.redraw=this.redraw.bind(this),this.extend=this.extend.bind(this),this.onAdd=this.onAdd.bind(this),this.draw=this.draw.bind(this),this.extend(e,google.maps.OverlayView),this.markers=[],this.clusters=[],this.listeners=[],this.activeMap=null,this.ready=!1,this.gridSize=s.gridSize||60,this.minClusterSize=s.minimumClusterSize||2,this.maxZoom=s.maxZoom||null,this.styles=s.styles||[],this.title=s.title||"",this.zoomOnClick=!0,void 0!==s.zoomOnClick&&(this.zoomOnClick=s.zoomOnClick),this.averageCenter=!1,void 0!==s.averageCenter&&(this.averageCenter=s.averageCenter),this.ignoreHidden=!1,void 0!==s.ignoreHidden&&(this.ignoreHidden=s.ignoreHidden),this.enableRetinaIcons=!1,void 0!==s.enableRetinaIcons&&(this.enableRetinaIcons=s.enableRetinaIcons),this.imagePath=s.imagePath||"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m",this.imageExtension=s.imageExtension||"png",this.imageSizes=s.imageSizes||me,this.calculator=s.calculator||ce,this.batchSize=s.batchSize||2e3,this.batchSizeIE=s.batchSizeIE||500,this.clusterClass=s.clusterClass||"cluster",-1!==navigator.userAgent.toLowerCase().indexOf("msie")&&(this.batchSize=this.batchSizeIE),this.timerRefStatic=null,this.setupStyles(),this.addMarkers(n,!0),this.setMap(t)}return e.prototype.onZoomChanged=function(){var e,t;this.resetViewport(!1),(null===(e=this.getMap())||void 0===e?void 0:e.getZoom())!==(this.get("minZoom")||0)&&(null===(t=this.getMap())||void 0===t?void 0:t.getZoom())!==this.get("maxZoom")||google.maps.event.trigger(this,"idle")},e.prototype.onIdle=function(){this.redraw()},e.prototype.onAdd=function(){var e=this.getMap();this.activeMap=e,this.ready=!0,this.repaint(),null!==e&&(this.listeners=[google.maps.event.addListener(e,"zoom_changed",this.onZoomChanged),google.maps.event.addListener(e,"idle",this.onIdle)])},e.prototype.onRemove=function(){for(var e=0;e<this.markers.length;e++)this.markers[e].getMap()!==this.activeMap&&this.markers[e].setMap(this.activeMap);for(e=0;e<this.clusters.length;e++)this.clusters[e].remove();this.clusters=[];for(e=0;e<this.listeners.length;e++)google.maps.event.removeListener(this.listeners[e]);this.listeners=[],this.activeMap=null,this.ready=!1},e.prototype.draw=function(){},e.prototype.setupStyles=function(){if(!(this.styles.length>0))for(var e=0;e<this.imageSizes.length;e++)this.styles.push({url:"".concat(this.imagePath+(e+1),".").concat(this.imageExtension),height:this.imageSizes[e],width:this.imageSizes[e]})},e.prototype.fitMapToMarkers=function(){for(var e=this.getMarkers(),t=new google.maps.LatLngBounds,n=0;n<e.length;n++){var s=e[n].getPosition();s&&t.extend(s)}var o=this.getMap();null!==o&&"fitBounds"in o&&o.fitBounds(t)},e.prototype.getGridSize=function(){return this.gridSize},e.prototype.setGridSize=function(e){this.gridSize=e},e.prototype.getMinimumClusterSize=function(){return this.minClusterSize},e.prototype.setMinimumClusterSize=function(e){this.minClusterSize=e},e.prototype.getMaxZoom=function(){return this.maxZoom},e.prototype.setMaxZoom=function(e){this.maxZoom=e},e.prototype.getStyles=function(){return this.styles},e.prototype.setStyles=function(e){this.styles=e},e.prototype.getTitle=function(){return this.title},e.prototype.setTitle=function(e){this.title=e},e.prototype.getZoomOnClick=function(){return this.zoomOnClick},e.prototype.setZoomOnClick=function(e){this.zoomOnClick=e},e.prototype.getAverageCenter=function(){return this.averageCenter},e.prototype.setAverageCenter=function(e){this.averageCenter=e},e.prototype.getIgnoreHidden=function(){return this.ignoreHidden},e.prototype.setIgnoreHidden=function(e){this.ignoreHidden=e},e.prototype.getEnableRetinaIcons=function(){return this.enableRetinaIcons},e.prototype.setEnableRetinaIcons=function(e){this.enableRetinaIcons=e},e.prototype.getImageExtension=function(){return this.imageExtension},e.prototype.setImageExtension=function(e){this.imageExtension=e},e.prototype.getImagePath=function(){return this.imagePath},e.prototype.setImagePath=function(e){this.imagePath=e},e.prototype.getImageSizes=function(){return this.imageSizes},e.prototype.setImageSizes=function(e){this.imageSizes=e},e.prototype.getCalculator=function(){return this.calculator},e.prototype.setCalculator=function(e){this.calculator=e},e.prototype.getBatchSizeIE=function(){return this.batchSizeIE},e.prototype.setBatchSizeIE=function(e){this.batchSizeIE=e},e.prototype.getClusterClass=function(){return this.clusterClass},e.prototype.setClusterClass=function(e){this.clusterClass=e},e.prototype.getMarkers=function(){return this.markers},e.prototype.getTotalMarkers=function(){return this.markers.length},e.prototype.getClusters=function(){return this.clusters},e.prototype.getTotalClusters=function(){return this.clusters.length},e.prototype.addMarker=function(e,t){this.pushMarkerTo(e),t||this.redraw()},e.prototype.addMarkers=function(e,t){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&this.pushMarkerTo(e[n]);t||this.redraw()},e.prototype.pushMarkerTo=function(e){var t=this;e.getDraggable()&&google.maps.event.addListener(e,"dragend",(function(){t.ready&&(e.isAdded=!1,t.repaint())})),e.isAdded=!1,this.markers.push(e)},e.prototype.removeMarker_=function(e){var t=-1;if(this.markers.indexOf)t=this.markers.indexOf(e);else for(var n=0;n<this.markers.length;n++)if(e===this.markers[n]){t=n;break}return-1!==t&&(e.setMap(null),this.markers.splice(t,1),!0)},e.prototype.removeMarker=function(e,t){var n=this.removeMarker_(e);return!t&&n&&this.repaint(),n},e.prototype.removeMarkers=function(e,t){for(var n=!1,s=0;s<e.length;s++)n=n||this.removeMarker_(e[s]);return!t&&n&&this.repaint(),n},e.prototype.clearMarkers=function(){this.resetViewport(!0),this.markers=[]},e.prototype.repaint=function(){var e=this.clusters.slice();this.clusters=[],this.resetViewport(!1),this.redraw(),setTimeout((function(){for(var t=0;t<e.length;t++)e[t].remove()}),0)},e.prototype.getExtendedBounds=function(e){var t=this.getProjection(),n=t.fromLatLngToDivPixel(new google.maps.LatLng(e.getNorthEast().lat(),e.getNorthEast().lng()));null!==n&&(n.x+=this.gridSize,n.y-=this.gridSize);var s=t.fromLatLngToDivPixel(new google.maps.LatLng(e.getSouthWest().lat(),e.getSouthWest().lng()));if(null!==s&&(s.x-=this.gridSize,s.y+=this.gridSize),null!==n){var o=t.fromDivPixelToLatLng(n);null!==o&&e.extend(o)}if(null!==s){var i=t.fromDivPixelToLatLng(s);null!==i&&e.extend(i)}return e},e.prototype.redraw=function(){this.createClusters(0)},e.prototype.resetViewport=function(e){for(var t=0;t<this.clusters.length;t++)this.clusters[t].remove();this.clusters=[];for(t=0;t<this.markers.length;t++){var n=this.markers[t];n.isAdded=!1,e&&n.setMap(null)}},e.prototype.distanceBetweenPoints=function(e,t){var n=(t.lat()-e.lat())*Math.PI/180,s=(t.lng()-e.lng())*Math.PI/180,o=Math.sin(n/2)*Math.sin(n/2)+Math.cos(e.lat()*Math.PI/180)*Math.cos(t.lat()*Math.PI/180)*Math.sin(s/2)*Math.sin(s/2);return 2*Math.atan2(Math.sqrt(o),Math.sqrt(1-o))*6371},e.prototype.isMarkerInBounds=function(e,t){var n=e.getPosition();return!!n&&t.contains(n)},e.prototype.addToClosestCluster=function(e){for(var t,n=4e4,s=null,o=0;o<this.clusters.length;o++){var i=(t=this.clusters[o]).getCenter(),r=e.getPosition();if(i&&r){var a=this.distanceBetweenPoints(i,r);a<n&&(n=a,s=t)}}s&&s.isMarkerInClusterBounds(e)?s.addMarker(e):((t=new ue(this)).addMarker(e),this.clusters.push(t))},e.prototype.createClusters=function(e){var t=this;if(this.ready){0===e&&(google.maps.event.trigger(this,"clusteringbegin",this),null!==this.timerRefStatic&&(window.clearTimeout(this.timerRefStatic),delete this.timerRefStatic));for(var n=this.getMap(),s=(null!==n&&"getBounds"in n?n.getBounds():null),o=((null==n?void 0:n.getZoom())||0)>3?new google.maps.LatLngBounds(null==s?void 0:s.getSouthWest(),null==s?void 0:s.getNorthEast()):new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472,-178.48388434375),new google.maps.LatLng(-85.08136444384544,178.00048865625)),i=this.getExtendedBounds(o),r=Math.min(e+this.batchSize,this.markers.length),a=e;a<r;a++){var l=this.markers[a];!l.isAdded&&this.isMarkerInBounds(l,i)&&(!this.ignoreHidden||this.ignoreHidden&&l.getVisible())&&this.addToClosestCluster(l)}if(r<this.markers.length)this.timerRefStatic=window.setTimeout((function(){t.createClusters(r)}),0);else{this.timerRefStatic=null,google.maps.event.trigger(this,"clusteringend",this);for(a=0;a<this.clusters.length;a++)this.clusters[a].updateIcon()}}},e.prototype.extend=function(e,t){return function(e){for(var t in e.prototype)this.prototype[t]=e.prototype[t];return this}.apply(e,[t])},e}();const fe={onClick:"click",onClusteringBegin:"clusteringbegin",onClusteringEnd:"clusteringend",onMouseOut:"mouseout",onMouseOver:"mouseover"},Le={averageCenter(e,t){e.setAverageCenter(t)},batchSizeIE(e,t){e.setBatchSizeIE(t)},calculator(e,t){e.setCalculator(t)},clusterClass(e,t){e.setClusterClass(t)},enableRetinaIcons(e,t){e.setEnableRetinaIcons(t)},gridSize(e,t){e.setGridSize(t)},ignoreHidden(e,t){e.setIgnoreHidden(t)},imageExtension(e,t){e.setImageExtension(t)},imagePath(e,t){e.setImagePath(t)},imageSizes(e,t){e.setImageSizes(t)},maxZoom(e,t){e.setMaxZoom(t)},minimumClusterSize(e,t){e.setMinimumClusterSize(t)},styles(e,t){e.setStyles(t)},title(e,t){e.setTitle(t)},zoomOnClick(e,t){e.setZoomOnClick(t)}},ye={};const be=r((function(e){const{children:t,options:n,averageCenter:s,batchSizeIE:o,calculator:r,clusterClass:l,enableRetinaIcons:h,gridSize:d,ignoreHidden:g,imageExtension:u,imagePath:c,imageSizes:m,maxZoom:v,minimumClusterSize:f,styles:L,title:y,zoomOnClick:C,onClick:M,onClusteringBegin:x,onClusteringEnd:k,onMouseOver:w,onMouseOut:P,onLoad:S,onUnmount:E}=e,[O,I]=a(null),D=i(b),[B,z]=a(null),[T,U]=a(null),[_,R]=a(null),[j,A]=a(null),[Z,W]=a(null);return p((()=>{O&&P&&(null!==j&&google.maps.event.removeListener(j),A(google.maps.event.addListener(O,fe.onMouseOut,P)))}),[P]),p((()=>{O&&w&&(null!==Z&&google.maps.event.removeListener(Z),W(google.maps.event.addListener(O,fe.onMouseOver,w)))}),[w]),p((()=>{O&&M&&(null!==B&&google.maps.event.removeListener(B),z(google.maps.event.addListener(O,fe.onClick,M)))}),[M]),p((()=>{O&&x&&(null!==T&&google.maps.event.removeListener(T),U(google.maps.event.addListener(O,fe.onClusteringBegin,x)))}),[x]),p((()=>{O&&k&&(null!==_&&google.maps.event.removeListener(_),U(google.maps.event.addListener(O,fe.onClusteringEnd,k)))}),[k]),p((()=>{void 0!==s&&null!==O&&Le.averageCenter(O,s)}),[O,s]),p((()=>{void 0!==o&&null!==O&&Le.batchSizeIE(O,o)}),[O,o]),p((()=>{void 0!==r&&null!==O&&Le.calculator(O,r)}),[O,r]),p((()=>{void 0!==l&&null!==O&&Le.clusterClass(O,l)}),[O,l]),p((()=>{void 0!==h&&null!==O&&Le.enableRetinaIcons(O,h)}),[O,h]),p((()=>{void 0!==d&&null!==O&&Le.gridSize(O,d)}),[O,d]),p((()=>{void 0!==g&&null!==O&&Le.ignoreHidden(O,g)}),[O,g]),p((()=>{void 0!==u&&null!==O&&Le.imageExtension(O,u)}),[O,u]),p((()=>{void 0!==c&&null!==O&&Le.imagePath(O,c)}),[O,c]),p((()=>{void 0!==m&&null!==O&&Le.imageSizes(O,m)}),[O,m]),p((()=>{void 0!==v&&null!==O&&Le.maxZoom(O,v)}),[O,v]),p((()=>{void 0!==f&&null!==O&&Le.minimumClusterSize(O,f)}),[O,f]),p((()=>{void 0!==L&&null!==O&&Le.styles(O,L)}),[O,L]),p((()=>{void 0!==y&&null!==O&&Le.title(O,y)}),[O,y]),p((()=>{void 0!==C&&null!==O&&Le.zoomOnClick(O,C)}),[O,C]),p((()=>{if(!D)return;const e=Object.assign({},n||ye),t=new ve(D,[],e);return s&&Le.averageCenter(t,s),o&&Le.batchSizeIE(t,o),r&&Le.calculator(t,r),l&&Le.clusterClass(t,l),h&&Le.enableRetinaIcons(t,h),d&&Le.gridSize(t,d),g&&Le.ignoreHidden(t,g),u&&Le.imageExtension(t,u),c&&Le.imagePath(t,c),m&&Le.imageSizes(t,m),v&&Le.maxZoom(t,v),f&&Le.minimumClusterSize(t,f),L&&Le.styles(t,L),y&&Le.title(t,y),C&&Le.zoomOnClick(t,C),P&&A(google.maps.event.addListener(t,fe.onMouseOut,P)),w&&W(google.maps.event.addListener(t,fe.onMouseOver,w)),M&&z(google.maps.event.addListener(t,fe.onClick,M)),x&&U(google.maps.event.addListener(t,fe.onClusteringBegin,x)),k&&R(google.maps.event.addListener(t,fe.onClusteringEnd,k)),I(t),S&&S(t),()=>{null!==j&&google.maps.event.removeListener(j),null!==Z&&google.maps.event.removeListener(Z),null!==B&&google.maps.event.removeListener(B),null!==T&&google.maps.event.removeListener(T),null!==_&&google.maps.event.removeListener(_),E&&E(t)}}),[]),null!==O&&t(O)||null}));class Ce extends h{constructor(){super(...arguments),this.registeredEvents=[],this.state={markerClusterer:null},this.setClustererCallback=()=>{null!==this.state.markerClusterer&&this.props.onLoad&&this.props.onLoad(this.state.markerClusterer)}}componentDidMount(){if(this.context){const e=new ve(this.context,[],this.props.options);this.registeredEvents=P({updaterMap:Le,eventMap:fe,prevProps:{},nextProps:this.props,instance:e}),this.setState((()=>({markerClusterer:e})),this.setClustererCallback)}}componentDidUpdate(e){this.state.markerClusterer&&(w(this.registeredEvents),this.registeredEvents=P({updaterMap:Le,eventMap:fe,prevProps:e,nextProps:this.props,instance:this.state.markerClusterer}))}componentWillUnmount(){null!==this.state.markerClusterer&&(this.props.onUnmount&&this.props.onUnmount(this.state.markerClusterer),w(this.registeredEvents),this.state.markerClusterer.setMap(null))}render(){return null!==this.state.markerClusterer?this.props.children(this.state.markerClusterer):null}}function Me(e){e.cancelBubble=!0,e.stopPropagation&&e.stopPropagation()}Ce.contextType=b;var xe=function(){function e(t){void 0===t&&(t={}),this.getCloseClickHandler=this.getCloseClickHandler.bind(this),this.closeClickHandler=this.closeClickHandler.bind(this),this.createInfoBoxDiv=this.createInfoBoxDiv.bind(this),this.addClickHandler=this.addClickHandler.bind(this),this.getCloseBoxImg=this.getCloseBoxImg.bind(this),this.getBoxWidths=this.getBoxWidths.bind(this),this.setBoxStyle=this.setBoxStyle.bind(this),this.setPosition=this.setPosition.bind(this),this.getPosition=this.getPosition.bind(this),this.setOptions=this.setOptions.bind(this),this.setContent=this.setContent.bind(this),this.setVisible=this.setVisible.bind(this),this.getContent=this.getContent.bind(this),this.getVisible=this.getVisible.bind(this),this.setZIndex=this.setZIndex.bind(this),this.getZIndex=this.getZIndex.bind(this),this.onRemove=this.onRemove.bind(this),this.panBox=this.panBox.bind(this),this.extend=this.extend.bind(this),this.close=this.close.bind(this),this.draw=this.draw.bind(this),this.show=this.show.bind(this),this.hide=this.hide.bind(this),this.open=this.open.bind(this),this.extend(e,google.maps.OverlayView),this.content=t.content||"",this.disableAutoPan=t.disableAutoPan||!1,this.maxWidth=t.maxWidth||0,this.pixelOffset=t.pixelOffset||new google.maps.Size(0,0),this.position=t.position||new google.maps.LatLng(0,0),this.zIndex=t.zIndex||null,this.boxClass=t.boxClass||"infoBox",this.boxStyle=t.boxStyle||{},this.closeBoxMargin=t.closeBoxMargin||"2px",this.closeBoxURL=t.closeBoxURL||"http://www.google.com/intl/en_us/mapfiles/close.gif",""===t.closeBoxURL&&(this.closeBoxURL=""),this.infoBoxClearance=t.infoBoxClearance||new google.maps.Size(1,1),void 0===t.visible&&(void 0===t.isHidden?t.visible=!0:t.visible=!t.isHidden),this.isHidden=!t.visible,this.alignBottom=t.alignBottom||!1,this.pane=t.pane||"floatPane",this.enableEventPropagation=t.enableEventPropagation||!1,this.div=null,this.closeListener=null,this.moveListener=null,this.mapListener=null,this.contextListener=null,this.eventListeners=null,this.fixedWidthSet=null}return e.prototype.createInfoBoxDiv=function(){var e=this;if(!this.div){this.div=document.createElement("div"),this.setBoxStyle(),"string"==typeof this.content?this.div.innerHTML=this.getCloseBoxImg()+this.content:(this.div.innerHTML=this.getCloseBoxImg(),this.div.appendChild(this.content));var t=this.getPanes();if(null!==t&&t[this.pane].appendChild(this.div),this.addClickHandler(),this.div.style.width)this.fixedWidthSet=!0;else if(0!==this.maxWidth&&this.div.offsetWidth>this.maxWidth)this.div.style.width=this.maxWidth+"px",this.fixedWidthSet=!0;else{var n=this.getBoxWidths();this.div.style.width=this.div.offsetWidth-n.left-n.right+"px",this.fixedWidthSet=!1}if(this.panBox(this.disableAutoPan),!this.enableEventPropagation){this.eventListeners=[];for(var s=["mousedown","mouseover","mouseout","mouseup","click","dblclick","touchstart","touchend","touchmove"],o=0;o<s.length;o++)this.eventListeners.push(google.maps.event.addListener(this.div,s[o],Me));this.eventListeners.push(google.maps.event.addListener(this.div,"mouseover",(function(){e.div&&(e.div.style.cursor="default")})))}this.contextListener=google.maps.event.addListener(this.div,"contextmenu",(function(t){t.returnValue=!1,t.preventDefault&&t.preventDefault(),e.enableEventPropagation||Me(t)})),google.maps.event.trigger(this,"domready")}},e.prototype.getCloseBoxImg=function(){var e="";return""!==this.closeBoxURL&&(e='<img alt=""',e+=' aria-hidden="true"',e+=" src='"+this.closeBoxURL+"'",e+=" align=right",e+=" style='",e+=" position: relative;",e+=" cursor: pointer;",e+=" margin: "+this.closeBoxMargin+";",e+="'>"),e},e.prototype.addClickHandler=function(){this.closeListener=this.div&&this.div.firstChild&&""!==this.closeBoxURL?google.maps.event.addListener(this.div.firstChild,"click",this.getCloseClickHandler()):null},e.prototype.closeClickHandler=function(e){e.cancelBubble=!0,e.stopPropagation&&e.stopPropagation(),google.maps.event.trigger(this,"closeclick"),this.close()},e.prototype.getCloseClickHandler=function(){return this.closeClickHandler},e.prototype.panBox=function(e){if(this.div&&!e){var t=this.getMap();if(t instanceof google.maps.Map){var n=0,s=0,o=t.getBounds();o&&!o.contains(this.position)&&t.setCenter(this.position);var i=t.getDiv(),r=i.offsetWidth,a=i.offsetHeight,l=this.pixelOffset.width,p=this.pixelOffset.height,h=this.div.offsetWidth,d=this.div.offsetHeight,g=this.infoBoxClearance.width,u=this.infoBoxClearance.height,c=this.getProjection().fromLatLngToContainerPixel(this.position);null!==c&&(c.x<-l+g?n=c.x+l-g:c.x+h+l+g>r&&(n=c.x+h+l+g-r),this.alignBottom?c.y<-p+u+d?s=c.y+p-u-d:c.y+p+u>a&&(s=c.y+p+u-a):c.y<-p+u?s=c.y+p-u:c.y+d+p+u>a&&(s=c.y+d+p+u-a)),0===n&&0===s||t.panBy(n,s)}}},e.prototype.setBoxStyle=function(){if(this.div){this.div.className=this.boxClass,this.div.style.cssText="";var e=this.boxStyle;for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(this.div.style[t]=e[t]);if(this.div.style.webkitTransform="translateZ(0)",void 0!==this.div.style.opacity&&""!==this.div.style.opacity){var n=parseFloat(this.div.style.opacity||"");this.div.style.msFilter='"progid:DXImageTransform.Microsoft.Alpha(Opacity='+100*n+')"',this.div.style.filter="alpha(opacity="+100*n+")"}this.div.style.position="absolute",this.div.style.visibility="hidden",null!==this.zIndex&&(this.div.style.zIndex=this.zIndex+""),this.div.style.overflow||(this.div.style.overflow="auto")}},e.prototype.getBoxWidths=function(){var e={top:0,bottom:0,left:0,right:0};if(!this.div)return e;if(document.defaultView){var t=this.div.ownerDocument,n=t&&t.defaultView?t.defaultView.getComputedStyle(this.div,""):null;n&&(e.top=parseInt(n.borderTopWidth||"",10)||0,e.bottom=parseInt(n.borderBottomWidth||"",10)||0,e.left=parseInt(n.borderLeftWidth||"",10)||0,e.right=parseInt(n.borderRightWidth||"",10)||0)}else if(document.documentElement.currentStyle){var s=this.div.currentStyle;s&&(e.top=parseInt(s.borderTopWidth||"",10)||0,e.bottom=parseInt(s.borderBottomWidth||"",10)||0,e.left=parseInt(s.borderLeftWidth||"",10)||0,e.right=parseInt(s.borderRightWidth||"",10)||0)}return e},e.prototype.onRemove=function(){this.div&&this.div.parentNode&&(this.div.parentNode.removeChild(this.div),this.div=null)},e.prototype.draw=function(){if(this.createInfoBoxDiv(),this.div){var e=this.getProjection().fromLatLngToDivPixel(this.position);null!==e&&(this.div.style.left=e.x+this.pixelOffset.width+"px",this.alignBottom?this.div.style.bottom=-(e.y+this.pixelOffset.height)+"px":this.div.style.top=e.y+this.pixelOffset.height+"px"),this.isHidden?this.div.style.visibility="hidden":this.div.style.visibility="visible"}},e.prototype.setOptions=function(e){void 0===e&&(e={}),void 0!==e.boxClass&&(this.boxClass=e.boxClass,this.setBoxStyle()),void 0!==e.boxStyle&&(this.boxStyle=e.boxStyle,this.setBoxStyle()),void 0!==e.content&&this.setContent(e.content),void 0!==e.disableAutoPan&&(this.disableAutoPan=e.disableAutoPan),void 0!==e.maxWidth&&(this.maxWidth=e.maxWidth),void 0!==e.pixelOffset&&(this.pixelOffset=e.pixelOffset),void 0!==e.alignBottom&&(this.alignBottom=e.alignBottom),void 0!==e.position&&this.setPosition(e.position),void 0!==e.zIndex&&this.setZIndex(e.zIndex),void 0!==e.closeBoxMargin&&(this.closeBoxMargin=e.closeBoxMargin),void 0!==e.closeBoxURL&&(this.closeBoxURL=e.closeBoxURL),void 0!==e.infoBoxClearance&&(this.infoBoxClearance=e.infoBoxClearance),void 0!==e.isHidden&&(this.isHidden=e.isHidden),void 0!==e.visible&&(this.isHidden=!e.visible),void 0!==e.enableEventPropagation&&(this.enableEventPropagation=e.enableEventPropagation),this.div&&this.draw()},e.prototype.setContent=function(e){this.content=e,this.div&&(this.closeListener&&(google.maps.event.removeListener(this.closeListener),this.closeListener=null),this.fixedWidthSet||(this.div.style.width=""),"string"==typeof e?this.div.innerHTML=this.getCloseBoxImg()+e:(this.div.innerHTML=this.getCloseBoxImg(),this.div.appendChild(e)),this.fixedWidthSet||(this.div.style.width=this.div.offsetWidth+"px","string"==typeof e?this.div.innerHTML=this.getCloseBoxImg()+e:(this.div.innerHTML=this.getCloseBoxImg(),this.div.appendChild(e))),this.addClickHandler()),google.maps.event.trigger(this,"content_changed")},e.prototype.setPosition=function(e){this.position=e,this.div&&this.draw(),google.maps.event.trigger(this,"position_changed")},e.prototype.setVisible=function(e){this.isHidden=!e,this.div&&(this.div.style.visibility=this.isHidden?"hidden":"visible")},e.prototype.setZIndex=function(e){this.zIndex=e,this.div&&(this.div.style.zIndex=e+""),google.maps.event.trigger(this,"zindex_changed")},e.prototype.getContent=function(){return this.content},e.prototype.getPosition=function(){return this.position},e.prototype.getZIndex=function(){return this.zIndex},e.prototype.getVisible=function(){var e=this.getMap();return null!=e&&!this.isHidden},e.prototype.show=function(){this.isHidden=!1,this.div&&(this.div.style.visibility="visible")},e.prototype.hide=function(){this.isHidden=!0,this.div&&(this.div.style.visibility="hidden")},e.prototype.open=function(e,t){var n=this;t&&(this.position=t.getPosition(),this.moveListener=google.maps.event.addListener(t,"position_changed",(function(){var e=t.getPosition();n.setPosition(e)})),this.mapListener=google.maps.event.addListener(t,"map_changed",(function(){n.setMap(t.map)}))),this.setMap(e),this.div&&this.panBox()},e.prototype.close=function(){if(this.closeListener&&(google.maps.event.removeListener(this.closeListener),this.closeListener=null),this.eventListeners){for(var e=0;e<this.eventListeners.length;e++)google.maps.event.removeListener(this.eventListeners[e]);this.eventListeners=null}this.moveListener&&(google.maps.event.removeListener(this.moveListener),this.moveListener=null),this.mapListener&&(google.maps.event.removeListener(this.mapListener),this.mapListener=null),this.contextListener&&(google.maps.event.removeListener(this.contextListener),this.contextListener=null),this.setMap(null)},e.prototype.extend=function(e,t){return function(e){for(var t in e.prototype)Object.prototype.hasOwnProperty.call(this,t)||(this.prototype[t]=e.prototype[t]);return this}.apply(e,[t])},e}();const ke={onCloseClick:"closeclick",onContentChanged:"content_changed",onDomReady:"domready",onPositionChanged:"position_changed",onZindexChanged:"zindex_changed"},we={options(e,t){e.setOptions(t)},position(e,t){t instanceof google.maps.LatLng?e.setPosition(t):e.setPosition(new google.maps.LatLng(t.lat,t.lng))},visible(e,t){e.setVisible(t)},zIndex(e,t){e.setZIndex(t)}},Pe={};const Se=r((function({children:e,anchor:t,options:n,position:s,zIndex:o,onCloseClick:r,onDomReady:h,onContentChanged:d,onPositionChanged:g,onZindexChanged:c,onLoad:m,onUnmount:v}){const L=i(b),[C,M]=a(null),[x,k]=a(null),[w,P]=a(null),[S,E]=a(null),[O,D]=a(null),[B,z]=a(null),T=l(null);return p((()=>{L&&null!==C&&(C.close(),t?C.open(L,t):C.getPosition()&&C.open(L))}),[L,C,t]),p((()=>{n&&null!==C&&C.setOptions(n)}),[C,n]),p((()=>{if(s&&null!==C){const e=s instanceof google.maps.LatLng?s:new google.maps.LatLng(s.lat,s.lng);C.setPosition(e)}}),[s]),p((()=>{"number"==typeof o&&null!==C&&C.setZIndex(o)}),[o]),p((()=>{C&&r&&(null!==x&&google.maps.event.removeListener(x),k(google.maps.event.addListener(C,"closeclick",r)))}),[r]),p((()=>{C&&h&&(null!==w&&google.maps.event.removeListener(w),P(google.maps.event.addListener(C,"domready",h)))}),[h]),p((()=>{C&&d&&(null!==S&&google.maps.event.removeListener(S),E(google.maps.event.addListener(C,"content_changed",d)))}),[d]),p((()=>{C&&g&&(null!==O&&google.maps.event.removeListener(O),D(google.maps.event.addListener(C,"position_changed",g)))}),[g]),p((()=>{C&&c&&(null!==B&&google.maps.event.removeListener(B),z(google.maps.event.addListener(C,"zindex_changed",c)))}),[c]),p((()=>{if(L){const e=n||Pe,{position:s}=e,o=I(e,["position"]);let i;!s||s instanceof google.maps.LatLng||(i=new google.maps.LatLng(s.lat,s.lng));const a=new xe(Object.assign(Object.assign({},o),i?{position:i}:{}));T.current=document.createElement("div"),M(a),r&&k(google.maps.event.addListener(a,"closeclick",r)),h&&P(google.maps.event.addListener(a,"domready",h)),d&&E(google.maps.event.addListener(a,"content_changed",d)),g&&D(google.maps.event.addListener(a,"position_changed",g)),c&&z(google.maps.event.addListener(a,"zindex_changed",c)),a.setContent(T.current),t?a.open(L,t):a.getPosition()?a.open(L):y(!1,"You must provide either an anchor or a position prop for <InfoBox>."),m&&m(a)}return()=>{null!==C&&(x&&google.maps.event.removeListener(x),S&&google.maps.event.removeListener(S),w&&google.maps.event.removeListener(w),O&&google.maps.event.removeListener(O),B&&google.maps.event.removeListener(B),v&&v(C),C.close())}}),[]),T.current?f(u.only(e),T.current):null}));class Ee extends h{constructor(){super(...arguments),this.registeredEvents=[],this.containerElement=null,this.state={infoBox:null},this.open=(e,t)=>{t?e.open(this.context,t):e.getPosition()?e.open(this.context):y(!1,"You must provide either an anchor or a position prop for <InfoBox>.")},this.setInfoBoxCallback=()=>{null!==this.state.infoBox&&null!==this.containerElement&&(this.state.infoBox.setContent(this.containerElement),this.open(this.state.infoBox,this.props.anchor),this.props.onLoad&&this.props.onLoad(this.state.infoBox))}}componentDidMount(){const e=this.props.options||{},{position:t}=e,n=I(e,["position"]);let s;!t||t instanceof google.maps.LatLng||(s=new google.maps.LatLng(t.lat,t.lng));const o=new xe(Object.assign(Object.assign({},n),s?{position:s}:{}));this.containerElement=document.createElement("div"),this.registeredEvents=P({updaterMap:we,eventMap:ke,prevProps:{},nextProps:this.props,instance:o}),this.setState({infoBox:o},this.setInfoBoxCallback)}componentDidUpdate(e){const{infoBox:t}=this.state;null!==t&&(w(this.registeredEvents),this.registeredEvents=P({updaterMap:we,eventMap:ke,prevProps:e,nextProps:this.props,instance:t}))}componentWillUnmount(){const{onUnmount:e}=this.props,{infoBox:t}=this.state;null!==t&&(e&&e(t),w(this.registeredEvents),t.close())}render(){return this.containerElement?f(u.only(this.props.children),this.containerElement):null}}Ee.contextType=b;var Oe=function e(t,n){if(t===n)return!0;if(t&&n&&"object"==typeof t&&"object"==typeof n){if(t.constructor!==n.constructor)return!1;var s,o,i;if(Array.isArray(t)){if((s=t.length)!=n.length)return!1;for(o=s;0!=o--;)if(!e(t[o],n[o]))return!1;return!0}if(t.constructor===RegExp)return t.source===n.source&&t.flags===n.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===n.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===n.toString();if((s=(i=Object.keys(t)).length)!==Object.keys(n).length)return!1;for(o=s;0!=o--;)if(!Object.prototype.hasOwnProperty.call(n,i[o]))return!1;for(o=s;0!=o--;){var r=i[o];if(!e(t[r],n[r]))return!1}return!0}return t!=t&&n!=n},Ie={exports:{}},De=Ie.exports=function(){function e(n,s,o,i,r,a){if(!(r-i<=o)){var l=i+r>>1;t(n,s,l,i,r,a%2),e(n,s,o,i,l-1,a+1),e(n,s,o,l+1,r,a+1)}}function t(e,s,o,i,r,a){for(;r>i;){if(r-i>600){var l=r-i+1,p=o-i+1,h=Math.log(l),d=.5*Math.exp(2*h/3),g=.5*Math.sqrt(h*d*(l-d)/l)*(p-l/2<0?-1:1);t(e,s,o,Math.max(i,Math.floor(o-p*d/l+g)),Math.min(r,Math.floor(o+(l-p)*d/l+g)),a)}var u=s[2*o+a],c=i,m=r;for(n(e,s,i,o),s[2*r+a]>u&&n(e,s,i,r);c<m;){for(n(e,s,c,m),c++,m--;s[2*c+a]<u;)c++;for(;s[2*m+a]>u;)m--}s[2*i+a]===u?n(e,s,i,m):n(e,s,++m,r),m<=o&&(i=m+1),o<=m&&(r=m-1)}}function n(e,t,n,o){s(e,n,o),s(t,2*n,2*o),s(t,2*n+1,2*o+1)}function s(e,t,n){var s=e[t];e[t]=e[n],e[n]=s}function o(e,t,n,s,o,i,r){for(var a,l,p=[0,e.length-1,0],h=[];p.length;){var d=p.pop(),g=p.pop(),u=p.pop();if(g-u<=r)for(var c=u;c<=g;c++)a=t[2*c],l=t[2*c+1],a>=n&&a<=o&&l>=s&&l<=i&&h.push(e[c]);else{var m=Math.floor((u+g)/2);a=t[2*m],l=t[2*m+1],a>=n&&a<=o&&l>=s&&l<=i&&h.push(e[m]);var v=(d+1)%2;(0===d?n<=a:s<=l)&&(p.push(u),p.push(m-1),p.push(v)),(0===d?o>=a:i>=l)&&(p.push(m+1),p.push(g),p.push(v))}}return h}function i(e,t,n,s,o,i){for(var a=[0,e.length-1,0],l=[],p=o*o;a.length;){var h=a.pop(),d=a.pop(),g=a.pop();if(d-g<=i)for(var u=g;u<=d;u++)r(t[2*u],t[2*u+1],n,s)<=p&&l.push(e[u]);else{var c=Math.floor((g+d)/2),m=t[2*c],v=t[2*c+1];r(m,v,n,s)<=p&&l.push(e[c]);var f=(h+1)%2;(0===h?n-o<=m:s-o<=v)&&(a.push(g),a.push(c-1),a.push(f)),(0===h?n+o>=m:s+o>=v)&&(a.push(c+1),a.push(d),a.push(f))}}return l}function r(e,t,n,s){var o=e-n,i=t-s;return o*o+i*i}var a=function(e){return e[0]},l=function(e){return e[1]},p=function(t,n,s,o,i){void 0===n&&(n=a),void 0===s&&(s=l),void 0===o&&(o=64),void 0===i&&(i=Float64Array),this.nodeSize=o,this.points=t;for(var r=t.length<65536?Uint16Array:Uint32Array,p=this.ids=new r(t.length),h=this.coords=new i(2*t.length),d=0;d<t.length;d++)p[d]=d,h[2*d]=n(t[d]),h[2*d+1]=s(t[d]);e(p,h,o,0,p.length-1,0)};return p.prototype.range=function(e,t,n,s){return o(this.ids,this.coords,e,t,n,s,this.nodeSize)},p.prototype.within=function(e,t,n){return i(this.ids,this.coords,e,t,n,this.nodeSize)},p}();const Be={minZoom:0,maxZoom:16,minPoints:2,radius:40,extent:512,nodeSize:64,log:!1,generateId:!1,reduce:null,map:e=>e},ze=Math.fround||(Te=new Float32Array(1),e=>(Te[0]=+e,Te[0]));var Te;class Ue{constructor(e){this.options=Ne(Object.create(Be),e),this.trees=new Array(this.options.maxZoom+1)}load(e){const{log:t,minZoom:n,maxZoom:s,nodeSize:o}=this.options;t&&console.time("total time");const i=`prepare ${e.length} points`;t&&console.time(i),this.points=e;let r=[];for(let t=0;t<e.length;t++)e[t].geometry&&r.push(Re(e[t],t));this.trees[s+1]=new De(r,He,Ge,o,Float32Array),t&&console.timeEnd(i);for(let e=s;e>=n;e--){const n=+Date.now();r=this._cluster(r,e),this.trees[e]=new De(r,He,Ge,o,Float32Array),t&&console.log("z%d: %d clusters in %dms",e,r.length,+Date.now()-n)}return t&&console.timeEnd("total time"),this}getClusters(e,t){let n=((e[0]+180)%360+360)%360-180;const s=Math.max(-90,Math.min(90,e[1]));let o=180===e[2]?180:((e[2]+180)%360+360)%360-180;const i=Math.max(-90,Math.min(90,e[3]));if(e[2]-e[0]>=360)n=-180,o=180;else if(n>o){const e=this.getClusters([n,s,180,i],t),r=this.getClusters([-180,s,o,i],t);return e.concat(r)}const r=this.trees[this._limitZoom(t)],a=r.range(Ze(n),We(i),Ze(o),We(s)),l=[];for(const e of a){const t=r.points[e];l.push(t.numPoints?je(t):this.points[t.index])}return l}getChildren(e){const t=this._getOriginId(e),n=this._getOriginZoom(e),s="No cluster with the specified id.",o=this.trees[n];if(!o)throw new Error(s);const i=o.points[t];if(!i)throw new Error(s);const r=this.options.radius/(this.options.extent*Math.pow(2,n-1)),a=o.within(i.x,i.y,r),l=[];for(const t of a){const n=o.points[t];n.parentId===e&&l.push(n.numPoints?je(n):this.points[n.index])}if(0===l.length)throw new Error(s);return l}getLeaves(e,t,n){t=t||10,n=n||0;const s=[];return this._appendLeaves(s,e,t,n,0),s}getTile(e,t,n){const s=this.trees[this._limitZoom(e)],o=Math.pow(2,e),{extent:i,radius:r}=this.options,a=r/i,l=(n-a)/o,p=(n+1+a)/o,h={features:[]};return this._addTileFeatures(s.range((t-a)/o,l,(t+1+a)/o,p),s.points,t,n,o,h),0===t&&this._addTileFeatures(s.range(1-a/o,l,1,p),s.points,o,n,o,h),t===o-1&&this._addTileFeatures(s.range(0,l,a/o,p),s.points,-1,n,o,h),h.features.length?h:null}getClusterExpansionZoom(e){let t=this._getOriginZoom(e)-1;for(;t<=this.options.maxZoom;){const n=this.getChildren(e);if(t++,1!==n.length)break;e=n[0].properties.cluster_id}return t}_appendLeaves(e,t,n,s,o){const i=this.getChildren(t);for(const t of i){const i=t.properties;if(i&&i.cluster?o+i.point_count<=s?o+=i.point_count:o=this._appendLeaves(e,i.cluster_id,n,s,o):o<s?o++:e.push(t),e.length===n)break}return o}_addTileFeatures(e,t,n,s,o,i){for(const r of e){const e=t[r],a=e.numPoints;let l,p,h;if(a)l=Ae(e),p=e.x,h=e.y;else{const t=this.points[e.index];l=t.properties,p=Ze(t.geometry.coordinates[0]),h=We(t.geometry.coordinates[1])}const d={type:1,geometry:[[Math.round(this.options.extent*(p*o-n)),Math.round(this.options.extent*(h*o-s))]],tags:l};let g;a?g=e.id:this.options.generateId?g=e.index:this.points[e.index].id&&(g=this.points[e.index].id),void 0!==g&&(d.id=g),i.features.push(d)}}_limitZoom(e){return Math.max(this.options.minZoom,Math.min(+e,this.options.maxZoom+1))}_cluster(e,t){const n=[],{radius:s,extent:o,reduce:i,minPoints:r}=this.options,a=s/(o*Math.pow(2,t));for(let s=0;s<e.length;s++){const o=e[s];if(o.zoom<=t)continue;o.zoom=t;const l=this.trees[t+1],p=l.within(o.x,o.y,a),h=o.numPoints||1;let d=h;for(const e of p){const n=l.points[e];n.zoom>t&&(d+=n.numPoints||1)}if(d>h&&d>=r){let e=o.x*h,r=o.y*h,a=i&&h>1?this._map(o,!0):null;const g=(s<<5)+(t+1)+this.points.length;for(const n of p){const s=l.points[n];if(s.zoom<=t)continue;s.zoom=t;const p=s.numPoints||1;e+=s.x*p,r+=s.y*p,s.parentId=g,i&&(a||(a=this._map(o,!0)),i(a,this._map(s)))}o.parentId=g,n.push(_e(e/d,r/d,g,d,a))}else if(n.push(o),d>1)for(const e of p){const s=l.points[e];s.zoom<=t||(s.zoom=t,n.push(s))}}return n}_getOriginId(e){return e-this.points.length>>5}_getOriginZoom(e){return(e-this.points.length)%32}_map(e,t){if(e.numPoints)return t?Ne({},e.properties):e.properties;const n=this.points[e.index].properties,s=this.options.map(n);return t&&s===n?Ne({},s):s}}function _e(e,t,n,s,o){return{x:ze(e),y:ze(t),zoom:1/0,id:n,parentId:-1,numPoints:s,properties:o}}function Re(e,t){const[n,s]=e.geometry.coordinates;return{x:ze(Ze(n)),y:ze(We(s)),zoom:1/0,index:t,parentId:-1}}function je(e){return{type:"Feature",id:e.id,properties:Ae(e),geometry:{type:"Point",coordinates:[(t=e.x,360*(t-.5)),Ve(e.y)]}};var t}function Ae(e){const t=e.numPoints,n=t>=1e4?`${Math.round(t/1e3)}k`:t>=1e3?Math.round(t/100)/10+"k":t;return Ne(Ne({},e.properties),{cluster:!0,cluster_id:e.id,point_count:t,point_count_abbreviated:n})}function Ze(e){return e/360+.5}function We(e){const t=Math.sin(e*Math.PI/180),n=.5-.25*Math.log((1+t)/(1-t))/Math.PI;return n<0?0:n>1?1:n}function Ve(e){const t=(180-360*e)*Math.PI/180;return 360*Math.atan(Math.exp(t))/Math.PI-90}function Ne(e,t){for(const n in t)e[n]=t[n];return e}function He(e){return e.x}function Ge(e){return e.y}
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function Fe(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(s=Object.getOwnPropertySymbols(e);o<s.length;o++)t.indexOf(s[o])<0&&Object.prototype.propertyIsEnumerable.call(e,s[o])&&(n[s[o]]=e[s[o]])}return n}class $e{constructor({markers:e,position:t}){this.markers=e,t&&(t instanceof google.maps.LatLng?this._position=t:this._position=new google.maps.LatLng(t))}get bounds(){if(0!==this.markers.length||this._position)return this.markers.reduce(((e,t)=>e.extend(t.getPosition())),new google.maps.LatLngBounds(this._position,this._position))}get position(){return this._position||this.bounds.getCenter()}get count(){return this.markers.filter((e=>e.getVisible())).length}push(e){this.markers.push(e)}delete(){this.marker&&(this.marker.setMap(null),delete this.marker),this.markers.length=0}}const Ke=(e,t,n,s)=>{const o=Ye(e.getBounds(),t,s);return n.filter((e=>o.contains(e.getPosition())))},Ye=(e,t,n)=>{const{northEast:s,southWest:o}=Je(e,t),i=Xe({northEast:s,southWest:o},n);return Qe(i,t)},qe=(e,t)=>{const n=(t.lat-e.lat)*Math.PI/180,s=(t.lng-e.lng)*Math.PI/180,o=Math.sin(n/2)*Math.sin(n/2)+Math.cos(e.lat*Math.PI/180)*Math.cos(t.lat*Math.PI/180)*Math.sin(s/2)*Math.sin(s/2);return 6371*(2*Math.atan2(Math.sqrt(o),Math.sqrt(1-o)))},Je=(e,t)=>({northEast:t.fromLatLngToDivPixel(e.getNorthEast()),southWest:t.fromLatLngToDivPixel(e.getSouthWest())}),Xe=({northEast:e,southWest:t},n)=>(e.x+=n,e.y-=n,t.x-=n,t.y+=n,{northEast:e,southWest:t}),Qe=({northEast:e,southWest:t},n)=>{const s=new google.maps.LatLngBounds;return s.extend(n.fromDivPixelToLatLng(e)),s.extend(n.fromDivPixelToLatLng(t)),s};class et{constructor({maxZoom:e=16}){this.maxZoom=e}noop({markers:e}){return nt(e)}}class tt extends et{constructor(e){var{viewportPadding:t=60}=e;super(Fe(e,["viewportPadding"])),this.viewportPadding=60,this.viewportPadding=t}calculate({markers:e,map:t,mapCanvasProjection:n}){return t.getZoom()>=this.maxZoom?{clusters:this.noop({markers:e,map:t,mapCanvasProjection:n}),changed:!1}:{clusters:this.cluster({markers:Ke(t,n,e,this.viewportPadding),map:t,mapCanvasProjection:n})}}}const nt=e=>e.map((e=>new $e({position:e.getPosition(),markers:[e]})));class st extends et{constructor(e){var{maxZoom:t,radius:n=60}=e,s=Fe(e,["maxZoom","radius"]);super({maxZoom:t}),this.superCluster=new Ue(Object.assign({maxZoom:this.maxZoom,radius:n},s)),this.state={zoom:null}}calculate(e){let t=!1;if(!Oe(e.markers,this.markers)){t=!0,this.markers=[...e.markers];const n=this.markers.map((e=>({type:"Feature",geometry:{type:"Point",coordinates:[e.getPosition().lng(),e.getPosition().lat()]},properties:{marker:e}})));this.superCluster.load(n)}const n={zoom:e.map.getZoom()};return t||this.state.zoom>this.maxZoom&&n.zoom>this.maxZoom||(t=t||!Oe(this.state,n)),this.state=n,t&&(this.clusters=this.cluster(e)),{clusters:this.clusters,changed:t}}cluster({map:e}){return this.superCluster.getClusters([-180,-90,180,90],Math.round(e.getZoom())).map(this.transformCluster.bind(this))}transformCluster({geometry:{coordinates:[e,t]},properties:n}){if(n.cluster)return new $e({markers:this.superCluster.getLeaves(n.cluster_id,1/0).map((e=>e.properties.marker)),position:new google.maps.LatLng({lat:t,lng:e})});{const e=n.marker;return new $e({markers:[e],position:e.getPosition()})}}}class ot{constructor(e,t){this.markers={sum:e.length};const n=t.map((e=>e.count)),s=n.reduce(((e,t)=>e+t),0);this.clusters={count:t.length,markers:{mean:s/t.length,sum:s,min:Math.min(...n),max:Math.max(...n)}}}}class it{render({count:e,position:t},n){const s=e>Math.max(10,n.clusters.markers.mean)?"#ff0000":"#0000ff",o=window.btoa(`\n  <svg fill="${s}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 240 240">\n    <circle cx="120" cy="120" opacity=".6" r="70" />\n    <circle cx="120" cy="120" opacity=".3" r="90" />\n    <circle cx="120" cy="120" opacity=".2" r="110" />\n  </svg>`);return new google.maps.Marker({position:t,icon:{url:`data:image/svg+xml;base64,${o}`,scaledSize:new google.maps.Size(45,45)},label:{text:String(e),color:"rgba(255,255,255,0.9)",fontSize:"12px"},title:`Cluster of ${e} markers`,zIndex:Number(google.maps.Marker.MAX_ZINDEX)+e})}}class rt{constructor(){!function(e,t){for(let n in t.prototype)e.prototype[n]=t.prototype[n]}(rt,google.maps.OverlayView)}}var at;!function(e){e.CLUSTERING_BEGIN="clusteringbegin",e.CLUSTERING_END="clusteringend",e.CLUSTER_CLICK="click"}(at||(at={}));const lt=(e,t,n)=>{n.fitBounds(t.bounds)};class pt extends rt{constructor({map:e,markers:t=[],algorithm:n=new st({}),renderer:s=new it,onClusterClick:o=lt}){super(),this.markers=[...t],this.clusters=[],this.algorithm=n,this.renderer=s,this.onClusterClick=o,e&&this.setMap(e)}addMarker(e,t){this.markers.includes(e)||(this.markers.push(e),t||this.render())}addMarkers(e,t){e.forEach((e=>{this.addMarker(e,!0)})),t||this.render()}removeMarker(e,t){const n=this.markers.indexOf(e);return-1!==n&&(e.setMap(null),this.markers.splice(n,1),t||this.render(),!0)}removeMarkers(e,t){let n=!1;return e.forEach((e=>{n=this.removeMarker(e,!0)||n})),n&&!t&&this.render(),n}clearMarkers(e){this.markers.length=0,e||this.render()}render(){const e=this.getMap();if(e instanceof google.maps.Map&&this.getProjection()){google.maps.event.trigger(this,at.CLUSTERING_BEGIN,this);const{clusters:t,changed:n}=this.algorithm.calculate({markers:this.markers,map:e,mapCanvasProjection:this.getProjection()});(n||null==n)&&(this.reset(),this.clusters=t,this.renderClusters()),google.maps.event.trigger(this,at.CLUSTERING_END,this)}}onAdd(){this.idleListener=this.getMap().addListener("idle",this.render.bind(this)),this.render()}onRemove(){google.maps.event.removeListener(this.idleListener),this.reset()}reset(){this.markers.forEach((e=>e.setMap(null))),this.clusters.forEach((e=>e.delete())),this.clusters=[]}renderClusters(){const e=new ot(this.markers,this.clusters),t=this.getMap();this.clusters.forEach((n=>{1===n.markers.length?n.marker=n.markers[0]:(n.marker=this.renderer.render(n,e),this.onClusterClick&&n.marker.addListener("click",(e=>{google.maps.event.trigger(this,at.CLUSTER_CLICK,n),this.onClusterClick(e,n,t)}))),n.marker.setMap(t)}))}}var ht=Object.freeze({__proto__:null,AbstractAlgorithm:et,AbstractViewportAlgorithm:tt,Cluster:$e,ClusterStats:ot,DefaultRenderer:it,GridAlgorithm:class extends tt{constructor(e){var{maxDistance:t=4e4,gridSize:n=40}=e;super(Fe(e,["maxDistance","gridSize"])),this.clusters=[],this.maxDistance=t,this.gridSize=n,this.state={zoom:null}}calculate({markers:e,map:t,mapCanvasProjection:n}){const s={zoom:t.getZoom()};let o=!1;return this.state.zoom>this.maxZoom&&s.zoom>this.maxZoom||(o=!Oe(this.state,s)),this.state=s,t.getZoom()>=this.maxZoom?{clusters:this.noop({markers:e,map:t,mapCanvasProjection:n}),changed:o}:{clusters:this.cluster({markers:Ke(t,n,e,this.viewportPadding),map:t,mapCanvasProjection:n})}}cluster({markers:e,map:t,mapCanvasProjection:n}){return this.clusters=[],e.forEach((e=>{this.addToClosestCluster(e,t,n)})),this.clusters}addToClosestCluster(e,t,n){let s=this.maxDistance,o=null;for(let t=0;t<this.clusters.length;t++){const n=this.clusters[t],i=qe(n.bounds.getCenter().toJSON(),e.getPosition().toJSON());i<s&&(s=i,o=n)}if(o&&Ye(o.bounds,n,this.gridSize).contains(e.getPosition()))o.push(e);else{const t=new $e({markers:[e]});this.clusters.push(t)}}},MarkerClusterer:pt,get MarkerClustererEvents(){return at},NoopAlgorithm:class extends et{constructor(e){super(Fe(e,[]))}calculate({markers:e,map:t,mapCanvasProjection:n}){return{clusters:this.cluster({markers:e,map:t,mapCanvasProjection:n}),changed:!1}}cluster(e){return this.noop(e)}},SuperClusterAlgorithm:st,defaultOnClusterClickHandler:lt,distanceBetweenPoints:qe,extendBoundsToPaddedViewport:Ye,extendPixelBounds:Xe,filterMarkersToPaddedViewport:Ke,noop:nt,pixelBoundsToLatLngBounds:Qe});var dt=r((function({children:e,options:t}){const n=function(e){const t=C(),[n,s]=a(null);return p((()=>{if(t&&null===n){const n=new pt(Object.assign(Object.assign({},e),{map:t}));s(n)}}),[t]),n}(t);return null!==n?e(n):null}));const gt={onCloseClick:"closeclick",onContentChanged:"content_changed",onDomReady:"domready",onPositionChanged:"position_changed",onZindexChanged:"zindex_changed"},ut={options(e,t){e.setOptions(t)},position(e,t){e.setPosition(t)},zIndex(e,t){e.setZIndex(t)}};const ct=r((function({children:e,anchor:t,options:n,position:s,zIndex:o,onCloseClick:r,onDomReady:h,onContentChanged:d,onPositionChanged:g,onZindexChanged:c,onLoad:m,onUnmount:v}){const L=i(b),[C,M]=a(null),[x,k]=a(null),[w,P]=a(null),[S,E]=a(null),[O,I]=a(null),[D,B]=a(null),z=l(null);return p((()=>{null!==C&&(C.close(),t?C.open(L,t):C.getPosition()&&C.open(L))}),[L,C,t]),p((()=>{n&&null!==C&&C.setOptions(n)}),[C,n]),p((()=>{s&&null!==C&&C.setPosition(s)}),[s]),p((()=>{"number"==typeof o&&null!==C&&C.setZIndex(o)}),[o]),p((()=>{C&&r&&(null!==x&&google.maps.event.removeListener(x),k(google.maps.event.addListener(C,"closeclick",r)))}),[r]),p((()=>{C&&h&&(null!==w&&google.maps.event.removeListener(w),P(google.maps.event.addListener(C,"domready",h)))}),[h]),p((()=>{C&&d&&(null!==S&&google.maps.event.removeListener(S),E(google.maps.event.addListener(C,"content_changed",d)))}),[d]),p((()=>{C&&g&&(null!==O&&google.maps.event.removeListener(O),I(google.maps.event.addListener(C,"position_changed",g)))}),[g]),p((()=>{C&&c&&(null!==D&&google.maps.event.removeListener(D),B(google.maps.event.addListener(C,"zindex_changed",c)))}),[c]),p((()=>{const e=new google.maps.InfoWindow(Object.assign({},n||{}));return M(e),z.current=document.createElement("div"),r&&k(google.maps.event.addListener(e,"closeclick",r)),h&&P(google.maps.event.addListener(e,"domready",h)),d&&E(google.maps.event.addListener(e,"content_changed",d)),g&&I(google.maps.event.addListener(e,"position_changed",g)),c&&B(google.maps.event.addListener(e,"zindex_changed",c)),e.setContent(z.current),s&&e.setPosition(s),o&&e.setZIndex(o),t?e.open(L,t):e.getPosition()?e.open(L):y(!1,"You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoWindow>."),m&&m(e),()=>{x&&google.maps.event.removeListener(x),S&&google.maps.event.removeListener(S),w&&google.maps.event.removeListener(w),O&&google.maps.event.removeListener(O),D&&google.maps.event.removeListener(D),v&&v(e),e.close()}}),[]),z.current?f(u.only(e),z.current):null}));class mt extends h{constructor(){super(...arguments),this.registeredEvents=[],this.containerElement=null,this.state={infoWindow:null},this.open=(e,t)=>{t?e.open(this.context,t):e.getPosition()?e.open(this.context):y(!1,"You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoWindow>.")},this.setInfoWindowCallback=()=>{null!==this.state.infoWindow&&null!==this.containerElement&&(this.state.infoWindow.setContent(this.containerElement),this.open(this.state.infoWindow,this.props.anchor),this.props.onLoad&&this.props.onLoad(this.state.infoWindow))}}componentDidMount(){const e=new google.maps.InfoWindow(Object.assign({},this.props.options||{}));this.containerElement=document.createElement("div"),this.registeredEvents=P({updaterMap:ut,eventMap:gt,prevProps:{},nextProps:this.props,instance:e}),this.setState((()=>({infoWindow:e})),this.setInfoWindowCallback)}componentDidUpdate(e){null!==this.state.infoWindow&&(w(this.registeredEvents),this.registeredEvents=P({updaterMap:ut,eventMap:gt,prevProps:e,nextProps:this.props,instance:this.state.infoWindow}))}componentWillUnmount(){null!==this.state.infoWindow&&(w(this.registeredEvents),this.props.onUnmount&&this.props.onUnmount(this.state.infoWindow),this.state.infoWindow.close())}render(){return this.containerElement?f(u.only(this.props.children),this.containerElement):null}}mt.contextType=b;const vt={onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},ft={draggable(e,t){e.setDraggable(t)},editable(e,t){e.setEditable(t)},map(e,t){e.setMap(t)},options(e,t){e.setOptions(t)},path(e,t){e.setPath(t)},visible(e,t){e.setVisible(t)}},Lt={};const yt=r((function({options:e,draggable:t,editable:n,visible:s,path:o,onDblClick:r,onDragEnd:l,onDragStart:h,onMouseDown:d,onMouseMove:g,onMouseOut:u,onMouseOver:c,onMouseUp:m,onRightClick:v,onClick:f,onDrag:L,onLoad:y,onUnmount:C}){const M=i(b),[x,k]=a(null),[w,P]=a(null),[S,E]=a(null),[O,I]=a(null),[D,B]=a(null),[z,T]=a(null),[U,_]=a(null),[R,j]=a(null),[A,Z]=a(null),[W,V]=a(null),[N,H]=a(null),[G,F]=a(null);return p((()=>{null!==x&&x.setMap(M)}),[M]),p((()=>{void 0!==e&&null!==x&&x.setOptions(e)}),[x,e]),p((()=>{void 0!==t&&null!==x&&x.setDraggable(t)}),[x,t]),p((()=>{void 0!==n&&null!==x&&x.setEditable(n)}),[x,n]),p((()=>{void 0!==s&&null!==x&&x.setVisible(s)}),[x,s]),p((()=>{void 0!==o&&null!==x&&x.setPath(o)}),[x,o]),p((()=>{x&&r&&(null!==w&&google.maps.event.removeListener(w),P(google.maps.event.addListener(x,"dblclick",r)))}),[r]),p((()=>{x&&l&&(null!==S&&google.maps.event.removeListener(S),E(google.maps.event.addListener(x,"dragend",l)))}),[l]),p((()=>{x&&h&&(null!==O&&google.maps.event.removeListener(O),I(google.maps.event.addListener(x,"dragstart",h)))}),[h]),p((()=>{x&&d&&(null!==D&&google.maps.event.removeListener(D),B(google.maps.event.addListener(x,"mousedown",d)))}),[d]),p((()=>{x&&g&&(null!==z&&google.maps.event.removeListener(z),T(google.maps.event.addListener(x,"mousemove",g)))}),[g]),p((()=>{x&&u&&(null!==U&&google.maps.event.removeListener(U),_(google.maps.event.addListener(x,"mouseout",u)))}),[u]),p((()=>{x&&c&&(null!==R&&google.maps.event.removeListener(R),j(google.maps.event.addListener(x,"mouseover",c)))}),[c]),p((()=>{x&&m&&(null!==A&&google.maps.event.removeListener(A),Z(google.maps.event.addListener(x,"mouseup",m)))}),[m]),p((()=>{x&&v&&(null!==W&&google.maps.event.removeListener(W),V(google.maps.event.addListener(x,"rightclick",v)))}),[v]),p((()=>{x&&f&&(null!==N&&google.maps.event.removeListener(N),H(google.maps.event.addListener(x,"click",f)))}),[f]),p((()=>{x&&L&&(null!==G&&google.maps.event.removeListener(G),F(google.maps.event.addListener(x,"drag",L)))}),[L]),p((()=>{const i=new google.maps.Polyline(Object.assign(Object.assign({},e||Lt),{map:M}));return o&&i.setPath(o),void 0!==s&&i.setVisible(s),void 0!==n&&i.setEditable(n),void 0!==t&&i.setDraggable(t),r&&P(google.maps.event.addListener(i,"dblclick",r)),l&&E(google.maps.event.addListener(i,"dragend",l)),h&&I(google.maps.event.addListener(i,"dragstart",h)),d&&B(google.maps.event.addListener(i,"mousedown",d)),g&&T(google.maps.event.addListener(i,"mousemove",g)),u&&_(google.maps.event.addListener(i,"mouseout",u)),c&&j(google.maps.event.addListener(i,"mouseover",c)),m&&Z(google.maps.event.addListener(i,"mouseup",m)),v&&V(google.maps.event.addListener(i,"rightclick",v)),f&&H(google.maps.event.addListener(i,"click",f)),L&&F(google.maps.event.addListener(i,"drag",L)),k(i),y&&y(i),()=>{null!==w&&google.maps.event.removeListener(w),null!==S&&google.maps.event.removeListener(S),null!==O&&google.maps.event.removeListener(O),null!==D&&google.maps.event.removeListener(D),null!==z&&google.maps.event.removeListener(z),null!==U&&google.maps.event.removeListener(U),null!==R&&google.maps.event.removeListener(R),null!==A&&google.maps.event.removeListener(A),null!==W&&google.maps.event.removeListener(W),null!==N&&google.maps.event.removeListener(N),C&&C(i),i.setMap(null)}}),[]),null}));class bt extends h{constructor(){super(...arguments),this.registeredEvents=[],this.state={polyline:null},this.setPolylineCallback=()=>{null!==this.state.polyline&&this.props.onLoad&&this.props.onLoad(this.state.polyline)}}componentDidMount(){const e=new google.maps.Polyline(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=P({updaterMap:ft,eventMap:vt,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{polyline:e}}),this.setPolylineCallback)}componentDidUpdate(e){null!==this.state.polyline&&(w(this.registeredEvents),this.registeredEvents=P({updaterMap:ft,eventMap:vt,prevProps:e,nextProps:this.props,instance:this.state.polyline}))}componentWillUnmount(){null!==this.state.polyline&&(this.props.onUnmount&&this.props.onUnmount(this.state.polyline),w(this.registeredEvents),this.state.polyline.setMap(null))}render(){return null}}bt.contextType=b;const Ct={onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},Mt={draggable(e,t){e.setDraggable(t)},editable(e,t){e.setEditable(t)},map(e,t){e.setMap(t)},options(e,t){e.setOptions(t)},path(e,t){e.setPath(t)},paths(e,t){e.setPaths(t)},visible(e,t){e.setVisible(t)}};const xt=r((function({options:e,draggable:t,editable:n,visible:s,path:o,paths:r,onDblClick:l,onDragEnd:h,onDragStart:d,onMouseDown:g,onMouseMove:u,onMouseOut:c,onMouseOver:m,onMouseUp:v,onRightClick:f,onClick:L,onDrag:y,onLoad:C,onUnmount:M}){const x=i(b),[k,w]=a(null),[P,S]=a(null),[E,O]=a(null),[I,D]=a(null),[B,z]=a(null),[T,U]=a(null),[_,R]=a(null),[j,A]=a(null),[Z,W]=a(null),[V,N]=a(null),[H,G]=a(null),[F,$]=a(null);return p((()=>{null!==k&&k.setMap(x)}),[x]),p((()=>{void 0!==e&&null!==k&&k.setOptions(e)}),[k,e]),p((()=>{void 0!==t&&null!==k&&k.setDraggable(t)}),[k,t]),p((()=>{void 0!==n&&null!==k&&k.setEditable(n)}),[k,n]),p((()=>{void 0!==s&&null!==k&&k.setVisible(s)}),[k,s]),p((()=>{void 0!==o&&null!==k&&k.setPath(o)}),[k,o]),p((()=>{void 0!==r&&null!==k&&k.setPaths(r)}),[k,r]),p((()=>{k&&l&&(null!==P&&google.maps.event.removeListener(P),S(google.maps.event.addListener(k,"dblclick",l)))}),[l]),p((()=>{k&&h&&(null!==E&&google.maps.event.removeListener(E),O(google.maps.event.addListener(k,"dragend",h)))}),[h]),p((()=>{k&&d&&(null!==I&&google.maps.event.removeListener(I),D(google.maps.event.addListener(k,"dragstart",d)))}),[d]),p((()=>{k&&g&&(null!==B&&google.maps.event.removeListener(B),z(google.maps.event.addListener(k,"mousedown",g)))}),[g]),p((()=>{k&&u&&(null!==T&&google.maps.event.removeListener(T),U(google.maps.event.addListener(k,"mousemove",u)))}),[u]),p((()=>{k&&c&&(null!==_&&google.maps.event.removeListener(_),R(google.maps.event.addListener(k,"mouseout",c)))}),[c]),p((()=>{k&&m&&(null!==j&&google.maps.event.removeListener(j),A(google.maps.event.addListener(k,"mouseover",m)))}),[m]),p((()=>{k&&v&&(null!==Z&&google.maps.event.removeListener(Z),W(google.maps.event.addListener(k,"mouseup",v)))}),[v]),p((()=>{k&&f&&(null!==V&&google.maps.event.removeListener(V),N(google.maps.event.addListener(k,"rightclick",f)))}),[f]),p((()=>{k&&L&&(null!==H&&google.maps.event.removeListener(H),G(google.maps.event.addListener(k,"click",L)))}),[L]),p((()=>{k&&y&&(null!==F&&google.maps.event.removeListener(F),$(google.maps.event.addListener(k,"drag",y)))}),[y]),p((()=>{const i=new google.maps.Polygon(Object.assign(Object.assign({},e||{}),{map:x}));return o&&i.setPath(o),r&&i.setPaths(r),void 0!==s&&i.setVisible(s),void 0!==n&&i.setEditable(n),void 0!==t&&i.setDraggable(t),l&&S(google.maps.event.addListener(i,"dblclick",l)),h&&O(google.maps.event.addListener(i,"dragend",h)),d&&D(google.maps.event.addListener(i,"dragstart",d)),g&&z(google.maps.event.addListener(i,"mousedown",g)),u&&U(google.maps.event.addListener(i,"mousemove",u)),c&&R(google.maps.event.addListener(i,"mouseout",c)),m&&A(google.maps.event.addListener(i,"mouseover",m)),v&&W(google.maps.event.addListener(i,"mouseup",v)),f&&N(google.maps.event.addListener(i,"rightclick",f)),L&&G(google.maps.event.addListener(i,"click",L)),y&&$(google.maps.event.addListener(i,"drag",y)),w(i),C&&C(i),()=>{null!==P&&google.maps.event.removeListener(P),null!==E&&google.maps.event.removeListener(E),null!==I&&google.maps.event.removeListener(I),null!==B&&google.maps.event.removeListener(B),null!==T&&google.maps.event.removeListener(T),null!==_&&google.maps.event.removeListener(_),null!==j&&google.maps.event.removeListener(j),null!==Z&&google.maps.event.removeListener(Z),null!==V&&google.maps.event.removeListener(V),null!==H&&google.maps.event.removeListener(H),M&&M(i),i.setMap(null)}}),[]),null}));class kt extends h{constructor(){super(...arguments),this.registeredEvents=[],this.state={polygon:null},this.setPolygonCallback=()=>{null!==this.state.polygon&&this.props.onLoad&&this.props.onLoad(this.state.polygon)}}componentDidMount(){const e=new google.maps.Polygon(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=P({updaterMap:Mt,eventMap:Ct,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{polygon:e}}),this.setPolygonCallback)}componentDidUpdate(e){null!==this.state.polygon&&(w(this.registeredEvents),this.registeredEvents=P({updaterMap:Mt,eventMap:Ct,prevProps:e,nextProps:this.props,instance:this.state.polygon}))}componentWillUnmount(){null!==this.state.polygon&&(this.props.onUnmount&&this.props.onUnmount(this.state.polygon),w(this.registeredEvents),this.state.polygon&&this.state.polygon.setMap(null))}render(){return null}}kt.contextType=b;const wt={onBoundsChanged:"bounds_changed",onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},Pt={bounds(e,t){e.setBounds(t)},draggable(e,t){e.setDraggable(t)},editable(e,t){e.setEditable(t)},map(e,t){e.setMap(t)},options(e,t){e.setOptions(t)},visible(e,t){e.setVisible(t)}};const St=r((function({options:e,bounds:t,draggable:n,editable:s,visible:o,onDblClick:r,onDragEnd:l,onDragStart:h,onMouseDown:d,onMouseMove:g,onMouseOut:u,onMouseOver:c,onMouseUp:m,onRightClick:v,onClick:f,onDrag:L,onBoundsChanged:y,onLoad:C,onUnmount:M}){const x=i(b),[k,w]=a(null),[P,S]=a(null),[E,O]=a(null),[I,D]=a(null),[B,z]=a(null),[T,U]=a(null),[_,R]=a(null),[j,A]=a(null),[Z,W]=a(null),[V,N]=a(null),[H,G]=a(null),[F,$]=a(null),[K,Y]=a(null);return p((()=>{null!==k&&k.setMap(x)}),[x]),p((()=>{void 0!==e&&null!==k&&k.setOptions(e)}),[k,e]),p((()=>{void 0!==n&&null!==k&&k.setDraggable(n)}),[k,n]),p((()=>{void 0!==s&&null!==k&&k.setEditable(s)}),[k,s]),p((()=>{void 0!==o&&null!==k&&k.setVisible(o)}),[k,o]),p((()=>{void 0!==t&&null!==k&&k.setBounds(t)}),[k,t]),p((()=>{k&&r&&(null!==P&&google.maps.event.removeListener(P),S(google.maps.event.addListener(k,"dblclick",r)))}),[r]),p((()=>{k&&l&&(null!==E&&google.maps.event.removeListener(E),O(google.maps.event.addListener(k,"dragend",l)))}),[l]),p((()=>{k&&h&&(null!==I&&google.maps.event.removeListener(I),D(google.maps.event.addListener(k,"dragstart",h)))}),[h]),p((()=>{k&&d&&(null!==B&&google.maps.event.removeListener(B),z(google.maps.event.addListener(k,"mousedown",d)))}),[d]),p((()=>{k&&g&&(null!==T&&google.maps.event.removeListener(T),U(google.maps.event.addListener(k,"mousemove",g)))}),[g]),p((()=>{k&&u&&(null!==_&&google.maps.event.removeListener(_),R(google.maps.event.addListener(k,"mouseout",u)))}),[u]),p((()=>{k&&c&&(null!==j&&google.maps.event.removeListener(j),A(google.maps.event.addListener(k,"mouseover",c)))}),[c]),p((()=>{k&&m&&(null!==Z&&google.maps.event.removeListener(Z),W(google.maps.event.addListener(k,"mouseup",m)))}),[m]),p((()=>{k&&v&&(null!==V&&google.maps.event.removeListener(V),N(google.maps.event.addListener(k,"rightclick",v)))}),[v]),p((()=>{k&&f&&(null!==H&&google.maps.event.removeListener(H),G(google.maps.event.addListener(k,"click",f)))}),[f]),p((()=>{k&&L&&(null!==F&&google.maps.event.removeListener(F),$(google.maps.event.addListener(k,"drag",L)))}),[L]),p((()=>{k&&y&&(null!==K&&google.maps.event.removeListener(K),Y(google.maps.event.addListener(k,"bounds_changed",y)))}),[y]),p((()=>{const i=new google.maps.Rectangle(Object.assign(Object.assign({},e||{}),{map:x}));return void 0!==o&&i.setVisible(o),void 0!==s&&i.setEditable(s),void 0!==n&&i.setDraggable(n),void 0!==t&&i.setBounds(t),r&&S(google.maps.event.addListener(i,"dblclick",r)),l&&O(google.maps.event.addListener(i,"dragend",l)),h&&D(google.maps.event.addListener(i,"dragstart",h)),d&&z(google.maps.event.addListener(i,"mousedown",d)),g&&U(google.maps.event.addListener(i,"mousemove",g)),u&&R(google.maps.event.addListener(i,"mouseout",u)),c&&A(google.maps.event.addListener(i,"mouseover",c)),m&&W(google.maps.event.addListener(i,"mouseup",m)),v&&N(google.maps.event.addListener(i,"rightclick",v)),f&&G(google.maps.event.addListener(i,"click",f)),L&&$(google.maps.event.addListener(i,"drag",L)),y&&Y(google.maps.event.addListener(i,"bounds_changed",y)),w(i),C&&C(i),()=>{null!==P&&google.maps.event.removeListener(P),null!==E&&google.maps.event.removeListener(E),null!==I&&google.maps.event.removeListener(I),null!==B&&google.maps.event.removeListener(B),null!==T&&google.maps.event.removeListener(T),null!==_&&google.maps.event.removeListener(_),null!==j&&google.maps.event.removeListener(j),null!==Z&&google.maps.event.removeListener(Z),null!==V&&google.maps.event.removeListener(V),null!==H&&google.maps.event.removeListener(H),null!==F&&google.maps.event.removeListener(F),null!==K&&google.maps.event.removeListener(K),M&&M(i),i.setMap(null)}}),[]),null}));class Et extends h{constructor(){super(...arguments),this.registeredEvents=[],this.state={rectangle:null},this.setRectangleCallback=()=>{null!==this.state.rectangle&&this.props.onLoad&&this.props.onLoad(this.state.rectangle)}}componentDidMount(){const e=new google.maps.Rectangle(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=P({updaterMap:Pt,eventMap:wt,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{rectangle:e}}),this.setRectangleCallback)}componentDidUpdate(e){null!==this.state.rectangle&&(w(this.registeredEvents),this.registeredEvents=P({updaterMap:Pt,eventMap:wt,prevProps:e,nextProps:this.props,instance:this.state.rectangle}))}componentWillUnmount(){null!==this.state.rectangle&&(this.props.onUnmount&&this.props.onUnmount(this.state.rectangle),w(this.registeredEvents),this.state.rectangle.setMap(null))}render(){return null}}Et.contextType=b;const Ot={onCenterChanged:"center_changed",onRadiusChanged:"radius_changed",onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},It={center(e,t){e.setCenter(t)},draggable(e,t){e.setDraggable(t)},editable(e,t){e.setEditable(t)},map(e,t){e.setMap(t)},options(e,t){e.setOptions(t)},radius(e,t){e.setRadius(t)},visible(e,t){e.setVisible(t)}},Dt={};const Bt=r((function({options:e,center:t,radius:n,draggable:s,editable:o,visible:r,onDblClick:l,onDragEnd:h,onDragStart:d,onMouseDown:g,onMouseMove:u,onMouseOut:c,onMouseOver:m,onMouseUp:v,onRightClick:f,onClick:L,onDrag:y,onCenterChanged:C,onRadiusChanged:M,onLoad:x,onUnmount:k}){const w=i(b),[P,S]=a(null),[E,O]=a(null),[I,D]=a(null),[B,z]=a(null),[T,U]=a(null),[_,R]=a(null),[j,A]=a(null),[Z,W]=a(null),[V,N]=a(null),[H,G]=a(null),[F,$]=a(null),[K,Y]=a(null),[q,J]=a(null),[X,Q]=a(null);return p((()=>{null!==P&&P.setMap(w)}),[w]),p((()=>{void 0!==e&&null!==P&&P.setOptions(e)}),[P,e]),p((()=>{void 0!==s&&null!==P&&P.setDraggable(s)}),[P,s]),p((()=>{void 0!==o&&null!==P&&P.setEditable(o)}),[P,o]),p((()=>{void 0!==r&&null!==P&&P.setVisible(r)}),[P,r]),p((()=>{"number"==typeof n&&null!==P&&P.setRadius(n)}),[P,n]),p((()=>{void 0!==t&&null!==P&&P.setCenter(t)}),[P,t]),p((()=>{P&&l&&(null!==E&&google.maps.event.removeListener(E),O(google.maps.event.addListener(P,"dblclick",l)))}),[l]),p((()=>{P&&h&&(null!==I&&google.maps.event.removeListener(I),D(google.maps.event.addListener(P,"dragend",h)))}),[h]),p((()=>{P&&d&&(null!==B&&google.maps.event.removeListener(B),z(google.maps.event.addListener(P,"dragstart",d)))}),[d]),p((()=>{P&&g&&(null!==T&&google.maps.event.removeListener(T),U(google.maps.event.addListener(P,"mousedown",g)))}),[g]),p((()=>{P&&u&&(null!==_&&google.maps.event.removeListener(_),R(google.maps.event.addListener(P,"mousemove",u)))}),[u]),p((()=>{P&&c&&(null!==j&&google.maps.event.removeListener(j),A(google.maps.event.addListener(P,"mouseout",c)))}),[c]),p((()=>{P&&m&&(null!==Z&&google.maps.event.removeListener(Z),W(google.maps.event.addListener(P,"mouseover",m)))}),[m]),p((()=>{P&&v&&(null!==V&&google.maps.event.removeListener(V),N(google.maps.event.addListener(P,"mouseup",v)))}),[v]),p((()=>{P&&f&&(null!==H&&google.maps.event.removeListener(H),G(google.maps.event.addListener(P,"rightclick",f)))}),[f]),p((()=>{P&&L&&(null!==F&&google.maps.event.removeListener(F),$(google.maps.event.addListener(P,"click",L)))}),[L]),p((()=>{P&&y&&(null!==K&&google.maps.event.removeListener(K),Y(google.maps.event.addListener(P,"drag",y)))}),[y]),p((()=>{P&&C&&(null!==q&&google.maps.event.removeListener(q),J(google.maps.event.addListener(P,"center_changed",C)))}),[L]),p((()=>{P&&M&&(null!==X&&google.maps.event.removeListener(X),Q(google.maps.event.addListener(P,"radius_changed",M)))}),[M]),p((()=>{const i=new google.maps.Circle(Object.assign(Object.assign({},e||Dt),{map:w}));return"number"==typeof n&&i.setRadius(n),void 0!==t&&i.setCenter(t),"number"==typeof n&&i.setRadius(n),void 0!==r&&i.setVisible(r),void 0!==o&&i.setEditable(o),void 0!==s&&i.setDraggable(s),l&&O(google.maps.event.addListener(i,"dblclick",l)),h&&D(google.maps.event.addListener(i,"dragend",h)),d&&z(google.maps.event.addListener(i,"dragstart",d)),g&&U(google.maps.event.addListener(i,"mousedown",g)),u&&R(google.maps.event.addListener(i,"mousemove",u)),c&&A(google.maps.event.addListener(i,"mouseout",c)),m&&W(google.maps.event.addListener(i,"mouseover",m)),v&&N(google.maps.event.addListener(i,"mouseup",v)),f&&G(google.maps.event.addListener(i,"rightclick",f)),L&&$(google.maps.event.addListener(i,"click",L)),y&&Y(google.maps.event.addListener(i,"drag",y)),C&&J(google.maps.event.addListener(i,"center_changed",C)),M&&Q(google.maps.event.addListener(i,"radius_changed",M)),S(i),x&&x(i),()=>{null!==E&&google.maps.event.removeListener(E),null!==I&&google.maps.event.removeListener(I),null!==B&&google.maps.event.removeListener(B),null!==T&&google.maps.event.removeListener(T),null!==_&&google.maps.event.removeListener(_),null!==j&&google.maps.event.removeListener(j),null!==Z&&google.maps.event.removeListener(Z),null!==V&&google.maps.event.removeListener(V),null!==H&&google.maps.event.removeListener(H),null!==F&&google.maps.event.removeListener(F),null!==q&&google.maps.event.removeListener(q),null!==X&&google.maps.event.removeListener(X),k&&k(i),i.setMap(null)}}),[]),null}));class zt extends h{constructor(){super(...arguments),this.registeredEvents=[],this.state={circle:null},this.setCircleCallback=()=>{null!==this.state.circle&&this.props.onLoad&&this.props.onLoad(this.state.circle)}}componentDidMount(){const e=new google.maps.Circle(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=P({updaterMap:It,eventMap:Ot,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{circle:e}}),this.setCircleCallback)}componentDidUpdate(e){null!==this.state.circle&&(w(this.registeredEvents),this.registeredEvents=P({updaterMap:It,eventMap:Ot,prevProps:e,nextProps:this.props,instance:this.state.circle}))}componentWillUnmount(){null!==this.state.circle&&(this.props.onUnmount&&this.props.onUnmount(this.state.circle),w(this.registeredEvents),this.state.circle&&this.state.circle.setMap(null))}render(){return null}}zt.contextType=b;const Tt={onClick:"click",onDblClick:"dblclick",onMouseDown:"mousedown",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick",onAddFeature:"addfeature",onRemoveFeature:"removefeature",onRemoveProperty:"removeproperty",onSetGeometry:"setgeometry",onSetProperty:"setproperty"},Ut={add(e,t){e.add(t)},addgeojson(e,t,n){e.addGeoJson(t,n)},contains(e,t){e.contains(t)},foreach(e,t){e.forEach(t)},loadgeojson(e,t,n,s){e.loadGeoJson(t,n,s)},overridestyle(e,t,n){e.overrideStyle(t,n)},remove(e,t){e.remove(t)},revertstyle(e,t){e.revertStyle(t)},controlposition(e,t){e.setControlPosition(t)},controls(e,t){e.setControls(t)},drawingmode(e,t){e.setDrawingMode(t)},map(e,t){e.setMap(t)},style(e,t){e.setStyle(t)},togeojson(e,t){e.toGeoJson(t)}};const _t=r((function({options:e,onClick:t,onDblClick:n,onMouseDown:s,onMouseMove:o,onMouseOut:r,onMouseOver:l,onMouseUp:h,onRightClick:d,onAddFeature:g,onRemoveFeature:u,onRemoveProperty:c,onSetGeometry:m,onSetProperty:v,onLoad:f,onUnmount:L}){const y=i(b),[C,M]=a(null),[x,k]=a(null),[w,P]=a(null),[S,E]=a(null),[O,I]=a(null),[D,B]=a(null),[z,T]=a(null),[U,_]=a(null),[R,j]=a(null),[A,Z]=a(null),[W,V]=a(null),[N,H]=a(null),[G,F]=a(null),[$,K]=a(null);return p((()=>{null!==C&&C.setMap(y)}),[y]),p((()=>{C&&n&&(null!==x&&google.maps.event.removeListener(x),k(google.maps.event.addListener(C,"dblclick",n)))}),[n]),p((()=>{C&&s&&(null!==w&&google.maps.event.removeListener(w),P(google.maps.event.addListener(C,"mousedown",s)))}),[s]),p((()=>{C&&o&&(null!==S&&google.maps.event.removeListener(S),E(google.maps.event.addListener(C,"mousemove",o)))}),[o]),p((()=>{C&&r&&(null!==O&&google.maps.event.removeListener(O),I(google.maps.event.addListener(C,"mouseout",r)))}),[r]),p((()=>{C&&l&&(null!==D&&google.maps.event.removeListener(D),B(google.maps.event.addListener(C,"mouseover",l)))}),[l]),p((()=>{C&&h&&(null!==z&&google.maps.event.removeListener(z),T(google.maps.event.addListener(C,"mouseup",h)))}),[h]),p((()=>{C&&d&&(null!==U&&google.maps.event.removeListener(U),_(google.maps.event.addListener(C,"rightclick",d)))}),[d]),p((()=>{C&&t&&(null!==R&&google.maps.event.removeListener(R),j(google.maps.event.addListener(C,"click",t)))}),[t]),p((()=>{C&&g&&(null!==A&&google.maps.event.removeListener(A),Z(google.maps.event.addListener(C,"addfeature",g)))}),[g]),p((()=>{C&&u&&(null!==W&&google.maps.event.removeListener(W),V(google.maps.event.addListener(C,"removefeature",u)))}),[u]),p((()=>{C&&c&&(null!==N&&google.maps.event.removeListener(N),H(google.maps.event.addListener(C,"removeproperty",c)))}),[c]),p((()=>{C&&m&&(null!==G&&google.maps.event.removeListener(G),F(google.maps.event.addListener(C,"setgeometry",m)))}),[m]),p((()=>{C&&v&&(null!==$&&google.maps.event.removeListener($),K(google.maps.event.addListener(C,"setproperty",v)))}),[v]),p((()=>{if(null!==y){const i=new google.maps.Data(Object.assign(Object.assign({},e||{}),{map:y}));n&&k(google.maps.event.addListener(i,"dblclick",n)),s&&P(google.maps.event.addListener(i,"mousedown",s)),o&&E(google.maps.event.addListener(i,"mousemove",o)),r&&I(google.maps.event.addListener(i,"mouseout",r)),l&&B(google.maps.event.addListener(i,"mouseover",l)),h&&T(google.maps.event.addListener(i,"mouseup",h)),d&&_(google.maps.event.addListener(i,"rightclick",d)),t&&j(google.maps.event.addListener(i,"click",t)),g&&Z(google.maps.event.addListener(i,"addfeature",g)),u&&V(google.maps.event.addListener(i,"removefeature",u)),c&&H(google.maps.event.addListener(i,"removeproperty",c)),m&&F(google.maps.event.addListener(i,"setgeometry",m)),v&&K(google.maps.event.addListener(i,"setproperty",v)),M(i),f&&f(i)}return()=>{C&&(null!==x&&google.maps.event.removeListener(x),null!==w&&google.maps.event.removeListener(w),null!==S&&google.maps.event.removeListener(S),null!==O&&google.maps.event.removeListener(O),null!==D&&google.maps.event.removeListener(D),null!==z&&google.maps.event.removeListener(z),null!==U&&google.maps.event.removeListener(U),null!==R&&google.maps.event.removeListener(R),null!==A&&google.maps.event.removeListener(A),null!==W&&google.maps.event.removeListener(W),null!==N&&google.maps.event.removeListener(N),null!==G&&google.maps.event.removeListener(G),null!==$&&google.maps.event.removeListener($),L&&L(C),C.setMap(null))}}),[]),null}));class Rt extends h{constructor(){super(...arguments),this.registeredEvents=[],this.state={data:null},this.setDataCallback=()=>{null!==this.state.data&&this.props.onLoad&&this.props.onLoad(this.state.data)}}componentDidMount(){if(null!==this.context){const e=new google.maps.Data(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=P({updaterMap:Ut,eventMap:Tt,prevProps:{},nextProps:this.props,instance:e}),this.setState((()=>({data:e})),this.setDataCallback)}}componentDidUpdate(e){null!==this.state.data&&(w(this.registeredEvents),this.registeredEvents=P({updaterMap:Ut,eventMap:Tt,prevProps:e,nextProps:this.props,instance:this.state.data}))}componentWillUnmount(){null!==this.state.data&&(this.props.onUnmount&&this.props.onUnmount(this.state.data),w(this.registeredEvents),this.state.data&&this.state.data.setMap(null))}render(){return null}}Rt.contextType=b;const jt={onClick:"click",onDefaultViewportChanged:"defaultviewport_changed",onStatusChanged:"status_changed"},At={options(e,t){e.setOptions(t)},url(e,t){e.setUrl(t)},zIndex(e,t){e.setZIndex(t)}};class Zt extends h{constructor(){super(...arguments),this.registeredEvents=[],this.state={kmlLayer:null},this.setKmlLayerCallback=()=>{null!==this.state.kmlLayer&&this.props.onLoad&&this.props.onLoad(this.state.kmlLayer)}}componentDidMount(){const e=new google.maps.KmlLayer(Object.assign(Object.assign({},this.props.options),{map:this.context}));this.registeredEvents=P({updaterMap:At,eventMap:jt,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{kmlLayer:e}}),this.setKmlLayerCallback)}componentDidUpdate(e){null!==this.state.kmlLayer&&(w(this.registeredEvents),this.registeredEvents=P({updaterMap:At,eventMap:jt,prevProps:e,nextProps:this.props,instance:this.state.kmlLayer}))}componentWillUnmount(){null!==this.state.kmlLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.kmlLayer),w(this.registeredEvents),this.state.kmlLayer.setMap(null))}render(){return null}}function Wt(e,t){return"function"==typeof t?t(e.offsetWidth,e.offsetHeight):{x:0,y:0}}function Vt(e,t){return new t(e.lat,e.lng)}function Nt(e,t){return new t(new google.maps.LatLng(e.ne.lat,e.ne.lng),new google.maps.LatLng(e.sw.lat,e.sw.lng))}function Ht(e,t,n,s){return void 0!==n?function(e,t,n){const s=e&&e.fromLatLngToDivPixel(n.getNorthEast()),o=e&&e.fromLatLngToDivPixel(n.getSouthWest());return s&&o?{left:`${o.x+t.x}px`,top:`${s.y+t.y}px`,width:s.x-o.x-t.x+"px",height:o.y-s.y-t.y+"px"}:{left:"-9999px",top:"-9999px"}}(e,t,(o=n,i=google.maps.LatLngBounds,r=Nt,o instanceof i?o:r(o,i))):function(e,t,n){const s=e&&e.fromLatLngToDivPixel(n);if(s){const{x:e,y:n}=s;return{left:`${e+t.x}px`,top:`${n+t.y}px`}}return{left:"-9999px",top:"-9999px"}}(e,t,function(e,t,n){return e instanceof t?e:n(e,t)}(s,google.maps.LatLng,Vt));var o,i,r}function Gt(e){if(!e)return"";return(e instanceof google.maps.LatLng?e:new google.maps.LatLng(e.lat,e.lng))+""}function Ft(e){if(!e)return"";return(e instanceof google.maps.LatLngBounds?e:new google.maps.LatLngBounds(new google.maps.LatLng(e.south,e.east),new google.maps.LatLng(e.north,e.west)))+""}Zt.contextType=b;const $t="floatPane",Kt="mapPane",Yt="markerLayer",qt="overlayLayer",Jt="overlayMouseTarget";const Xt=r((function({position:e,bounds:t,mapPaneName:n,zIndex:s,onLoad:o,onUnmount:r,getPixelPositionOffset:a,children:l}){const h=i(b),d=g((()=>{const e=document.createElement("div");return e.style.position="absolute",e}),[]),u=g((()=>function(e,t,n,s,o){class i extends google.maps.OverlayView{constructor(e,t,n,s){super(),this.container=e,this.pane=t,this.position=n,this.bounds=s}onAdd(){var e;const t=null===(e=this.getPanes())||void 0===e?void 0:e[this.pane];null==t||t.appendChild(this.container)}draw(){const e=Ht(this.getProjection(),Object.assign({},this.container?Wt(this.container,o):{x:0,y:0}),this.bounds,this.position);for(const[t,n]of Object.entries(e))this.container.style[t]=n}onRemove(){null!==this.container.parentNode&&this.container.parentNode.removeChild(this.container)}}return new i(e,t,n,s)}(d,n,e,t,a)),[d,n,e,t]);return p((()=>(null==o||o(u),null==u||u.setMap(h),()=>{null==r||r(u),null==u||u.setMap(null)})),[h,u]),p((()=>{d.style.zIndex=`${s}`}),[s,d]),v.createPortal(l,d)}));class Qt extends h{constructor(e){super(e),this.state={paneEl:null,containerStyle:{position:"absolute"}},this.updatePane=()=>{const e=this.props.mapPaneName,t=this.overlayView.getPanes();y(!!e,"OverlayView requires props.mapPaneName but got %s",e),t?this.setState({paneEl:t[e]}):this.setState({paneEl:null})},this.onAdd=()=>{var e,t;this.updatePane(),null===(t=(e=this.props).onLoad)||void 0===t||t.call(e,this.overlayView)},this.onPositionElement=()=>{const e=Ht(this.overlayView.getProjection(),Object.assign({x:0,y:0},this.containerRef.current?Wt(this.containerRef.current,this.props.getPixelPositionOffset):{}),this.props.bounds,this.props.position),{left:t,top:n,width:s,height:o}=this.state.containerStyle;var i,r;r={left:t,top:n,width:s,height:o},((i=e).left!==r.left||i.top!==r.top||i.width!==r.height||i.height!==r.height)&&this.setState({containerStyle:Object.assign(Object.assign({},e),{position:"absolute"})})},this.draw=()=>{this.onPositionElement()},this.onRemove=()=>{var e,t;this.setState((()=>({paneEl:null}))),null===(t=(e=this.props).onUnmount)||void 0===t||t.call(e,this.overlayView)},this.containerRef=d();const t=new google.maps.OverlayView;t.onAdd=this.onAdd,t.draw=this.draw,t.onRemove=this.onRemove,this.overlayView=t}componentDidMount(){this.overlayView.setMap(this.context)}componentDidUpdate(e){const t=Gt(e.position),n=Gt(this.props.position),s=Ft(e.bounds),o=Ft(this.props.bounds);t===n&&s===o||this.overlayView.draw(),e.mapPaneName!==this.props.mapPaneName&&this.updatePane()}componentWillUnmount(){this.overlayView.setMap(null)}render(){const t=this.state.paneEl;return t?v.createPortal(e("div",Object.assign({ref:this.containerRef,style:this.state.containerStyle},{children:u.only(this.props.children)})),t):null}}Qt.FLOAT_PANE="floatPane",Qt.MAP_PANE="mapPane",Qt.MARKER_LAYER="markerLayer",Qt.OVERLAY_LAYER="overlayLayer",Qt.OVERLAY_MOUSE_TARGET="overlayMouseTarget",Qt.contextType=b;const en={onDblClick:"dblclick",onClick:"click"},tn={opacity(e,t){e.setOpacity(t)}};const nn=r((function({url:e,bounds:t,options:n,visible:s}){const o=i(b),r=new google.maps.LatLngBounds(new google.maps.LatLng(t.south,t.west),new google.maps.LatLng(t.north,t.east)),a=g((()=>new google.maps.GroundOverlay(e,r,Object.assign({},n))),[]);return p((()=>{null!==a&&a.setMap(o)}),[o]),p((()=>{void 0!==e&&null!==a&&(a.set("url",e),a.setMap(o))}),[a,e]),p((()=>{void 0!==s&&null!==a&&a.setOpacity(s?1:0)}),[a,s]),p((()=>{const e=new google.maps.LatLngBounds(new google.maps.LatLng(t.south,t.west),new google.maps.LatLng(t.north,t.east));void 0!==t&&null!==a&&(a.set("bounds",e),a.setMap(o))}),[a,t]),null}));class sn extends h{constructor(){super(...arguments),this.registeredEvents=[],this.state={groundOverlay:null},this.setGroundOverlayCallback=()=>{null!==this.state.groundOverlay&&this.props.onLoad&&this.props.onLoad(this.state.groundOverlay)}}componentDidMount(){y(!!this.props.url||!!this.props.bounds,"For GroundOverlay, url and bounds are passed in to constructor and are immutable after instantiated. This is the behavior of Google Maps JavaScript API v3 ( See https://developers.google.com/maps/documentation/javascript/reference#GroundOverlay) Hence, use the corresponding two props provided by `react-google-maps-api`, url and bounds. In some cases, you'll need the GroundOverlay component to reflect the changes of url and bounds. You can leverage the React's key property to remount the component. Typically, just `key={url}` would serve your need. See https://github.com/tomchentw/react-google-maps/issues/655");const e=new google.maps.GroundOverlay(this.props.url,this.props.bounds,Object.assign(Object.assign({},this.props.options),{map:this.context}));this.registeredEvents=P({updaterMap:tn,eventMap:en,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{groundOverlay:e}}),this.setGroundOverlayCallback)}componentDidUpdate(e){null!==this.state.groundOverlay&&(w(this.registeredEvents),this.registeredEvents=P({updaterMap:tn,eventMap:en,prevProps:e,nextProps:this.props,instance:this.state.groundOverlay}))}componentWillUnmount(){this.state.groundOverlay&&(this.props.onUnmount&&this.props.onUnmount(this.state.groundOverlay),this.state.groundOverlay.setMap(null))}render(){return null}}sn.defaultProps={onLoad:function(){}},sn.contextType=b;const on={},rn={data(e,t){e.setData(t)},map(e,t){e.setMap(t)},options(e,t){e.setOptions(t)}};const an=r((function({data:e,onLoad:t,onUnmount:n,options:s}){const o=i(b),[r,l]=a(null);return p((()=>{google.maps.visualization||y(!!google.maps.visualization,'Did you include prop libraries={["visualization"]} in useJsApiScript? %s',google.maps.visualization)}),[]),p((()=>{y(!!e,"data property is required in HeatmapLayer %s",e)}),[e]),p((()=>{null!==r&&r.setMap(o)}),[o]),p((()=>{s&&null!==r&&r.setOptions(s)}),[r,s]),p((()=>{const i=new google.maps.visualization.HeatmapLayer(Object.assign(Object.assign({},s||{}),{data:e,map:o}));return l(i),t&&t(i),()=>{null!==r&&(n&&n(r),r.setMap(null))}}),[]),null}));class ln extends h{constructor(){super(...arguments),this.registeredEvents=[],this.state={heatmapLayer:null},this.setHeatmapLayerCallback=()=>{null!==this.state.heatmapLayer&&this.props.onLoad&&this.props.onLoad(this.state.heatmapLayer)}}componentDidMount(){y(!!google.maps.visualization,'Did you include prop libraries={["visualization"]} to <LoadScript />? %s',google.maps.visualization),y(!!this.props.data,"data property is required in HeatmapLayer %s",this.props.data);const e=new google.maps.visualization.HeatmapLayer(Object.assign(Object.assign({},this.props.options||{}),{data:this.props.data,map:this.context}));this.registeredEvents=P({updaterMap:rn,eventMap:on,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{heatmapLayer:e}}),this.setHeatmapLayerCallback)}componentDidUpdate(e){w(this.registeredEvents),this.registeredEvents=P({updaterMap:rn,eventMap:on,prevProps:e,nextProps:this.props,instance:this.state.heatmapLayer})}componentWillUnmount(){null!==this.state.heatmapLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.heatmapLayer),w(this.registeredEvents),this.state.heatmapLayer.setMap(null))}render(){return null}}ln.contextType=b;const pn={onCloseClick:"closeclick",onPanoChanged:"pano_changed",onPositionChanged:"position_changed",onPovChanged:"pov_changed",onResize:"resize",onStatusChanged:"status_changed",onVisibleChanged:"visible_changed",onZoomChanged:"zoom_changed"},hn={register(e,t,n){e.registerPanoProvider(t,n)},links(e,t){e.setLinks(t)},motionTracking(e,t){e.setMotionTracking(t)},options(e,t){e.setOptions(t)},pano(e,t){e.setPano(t)},position(e,t){e.setPosition(t)},pov(e,t){e.setPov(t)},visible(e,t){e.setVisible(t)},zoom(e,t){e.setZoom(t)}};class dn extends h{constructor(){super(...arguments),this.registeredEvents=[],this.state={streetViewPanorama:null},this.setStreetViewPanoramaCallback=()=>{null!==this.state.streetViewPanorama&&this.props.onLoad&&this.props.onLoad(this.state.streetViewPanorama)}}componentDidMount(){const e=this.context.getStreetView();this.registeredEvents=P({updaterMap:hn,eventMap:pn,prevProps:{},nextProps:this.props,instance:e}),this.setState((()=>({streetViewPanorama:e})),this.setStreetViewPanoramaCallback)}componentDidUpdate(e){null!==this.state.streetViewPanorama&&(w(this.registeredEvents),this.registeredEvents=P({updaterMap:hn,eventMap:pn,prevProps:e,nextProps:this.props,instance:this.state.streetViewPanorama}))}componentWillUnmount(){null!==this.state.streetViewPanorama&&(this.props.onUnmount&&this.props.onUnmount(this.state.streetViewPanorama),w(this.registeredEvents),this.state.streetViewPanorama.setVisible(!1))}render(){return null}}dn.contextType=b;class gn extends h{constructor(){super(...arguments),this.state={streetViewService:null},this.setStreetViewServiceCallback=()=>{null!==this.state.streetViewService&&this.props.onLoad&&this.props.onLoad(this.state.streetViewService)}}componentDidMount(){const e=new google.maps.StreetViewService;this.setState((function(){return{streetViewService:e}}),this.setStreetViewServiceCallback)}componentWillUnmount(){null!==this.state.streetViewService&&this.props.onUnmount&&this.props.onUnmount(this.state.streetViewService)}render(){return null}}gn.contextType=b;class un extends s.PureComponent{constructor(){super(...arguments),this.state={directionsService:null},this.setDirectionsServiceCallback=()=>{null!==this.state.directionsService&&this.props.onLoad&&this.props.onLoad(this.state.directionsService)}}componentDidMount(){y(!!this.props.options,"DirectionsService expected options object as parameter, but got %s",this.props.options);const e=new google.maps.DirectionsService;this.setState((function(){return{directionsService:e}}),this.setDirectionsServiceCallback)}componentDidUpdate(){null!==this.state.directionsService&&this.state.directionsService.route(this.props.options,this.props.callback)}componentWillUnmount(){null!==this.state.directionsService&&this.props.onUnmount&&this.props.onUnmount(this.state.directionsService)}render(){return null}}const cn={onDirectionsChanged:"directions_changed"},mn={directions(e,t){e.setDirections(t)},map(e,t){e.setMap(t)},options(e,t){e.setOptions(t)},panel(e,t){e.setPanel(t)},routeIndex(e,t){e.setRouteIndex(t)}};class vn extends h{constructor(){super(...arguments),this.registeredEvents=[],this.state={directionsRenderer:null},this.setDirectionsRendererCallback=()=>{null!==this.state.directionsRenderer&&(this.state.directionsRenderer.setMap(this.context),this.props.onLoad&&this.props.onLoad(this.state.directionsRenderer))}}componentDidMount(){const e=new google.maps.DirectionsRenderer(this.props.options);this.registeredEvents=P({updaterMap:mn,eventMap:cn,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{directionsRenderer:e}}),this.setDirectionsRendererCallback)}componentDidUpdate(e){null!==this.state.directionsRenderer&&(w(this.registeredEvents),this.registeredEvents=P({updaterMap:mn,eventMap:cn,prevProps:e,nextProps:this.props,instance:this.state.directionsRenderer}))}componentWillUnmount(){null!==this.state.directionsRenderer&&(this.props.onUnmount&&this.props.onUnmount(this.state.directionsRenderer),w(this.registeredEvents),this.state.directionsRenderer&&this.state.directionsRenderer.setMap(null))}render(){return e(t,{})}}vn.contextType=b;class fn extends s.PureComponent{constructor(){super(...arguments),this.state={distanceMatrixService:null},this.setDistanceMatrixServiceCallback=()=>{null!==this.state.distanceMatrixService&&this.props.onLoad&&this.props.onLoad(this.state.distanceMatrixService)}}componentDidMount(){y(!!this.props.options,"DistanceMatrixService expected options object as parameter, but go %s",this.props.options);const e=new google.maps.DistanceMatrixService;this.setState((function(){return{distanceMatrixService:e}}),this.setDistanceMatrixServiceCallback)}componentDidUpdate(){null!==this.state.distanceMatrixService&&this.state.distanceMatrixService.getDistanceMatrix(this.props.options,this.props.callback)}componentWillUnmount(){null!==this.state.distanceMatrixService&&this.props.onUnmount&&this.props.onUnmount(this.state.distanceMatrixService)}render(){return null}}const Ln={onPlacesChanged:"places_changed"},yn={bounds(e,t){e.setBounds(t)}};class bn extends h{constructor(){super(...arguments),this.registeredEvents=[],this.containerElement=d(),this.state={searchBox:null},this.setSearchBoxCallback=()=>{null!==this.state.searchBox&&this.props.onLoad&&this.props.onLoad(this.state.searchBox)}}componentDidMount(){if(y(!!google.maps.places,'You need to provide libraries={["places"]} prop to <LoadScript /> component %s',google.maps.places),null!==this.containerElement&&null!==this.containerElement.current){const e=this.containerElement.current.querySelector("input");if(null!==e){const t=new google.maps.places.SearchBox(e,this.props.options);this.registeredEvents=P({updaterMap:yn,eventMap:Ln,prevProps:{},nextProps:this.props,instance:t}),this.setState((function(){return{searchBox:t}}),this.setSearchBoxCallback)}}}componentDidUpdate(e){null!==this.state.searchBox&&(w(this.registeredEvents),this.registeredEvents=P({updaterMap:yn,eventMap:Ln,prevProps:e,nextProps:this.props,instance:this.state.searchBox}))}componentWillUnmount(){null!==this.state.searchBox&&(this.props.onUnmount&&this.props.onUnmount(this.state.searchBox),w(this.registeredEvents))}render(){return e("div",Object.assign({ref:this.containerElement},{children:u.only(this.props.children)}))}}bn.contextType=b;const Cn={onPlaceChanged:"place_changed"},Mn={bounds(e,t){e.setBounds(t)},restrictions(e,t){e.setComponentRestrictions(t)},fields(e,t){e.setFields(t)},options(e,t){e.setOptions(t)},types(e,t){e.setTypes(t)}};class xn extends h{constructor(){super(...arguments),this.registeredEvents=[],this.containerElement=d(),this.state={autocomplete:null},this.setAutocompleteCallback=()=>{null!==this.state.autocomplete&&this.props.onLoad&&this.props.onLoad(this.state.autocomplete)}}componentDidMount(){y(!!google.maps.places,'You need to provide libraries={["places"]} prop to <LoadScript /> component %s',google.maps.places);const e=this.containerElement.current.querySelector("input");if(e){const t=new google.maps.places.Autocomplete(e,this.props.options);this.registeredEvents=P({updaterMap:Mn,eventMap:Cn,prevProps:{},nextProps:this.props,instance:t}),this.setState((()=>({autocomplete:t})),this.setAutocompleteCallback)}}componentDidUpdate(e){w(this.registeredEvents),this.registeredEvents=P({updaterMap:Mn,eventMap:Cn,prevProps:e,nextProps:this.props,instance:this.state.autocomplete})}componentWillUnmount(){null!==this.state.autocomplete&&w(this.registeredEvents)}render(){return e("div",Object.assign({ref:this.containerElement,className:this.props.className},{children:u.only(this.props.children)}))}}xn.defaultProps={className:""},xn.contextType=b;export{xn as Autocomplete,ee as BicyclingLayer,Q as BicyclingLayerF,zt as Circle,Bt as CircleF,Rt as Data,_t as DataF,vn as DirectionsRenderer,un as DirectionsService,fn as DistanceMatrixService,re as DrawingManager,ie as DrawingManagerF,$t as FLOAT_PANE,O as GoogleMap,ht as GoogleMapsMarkerClusterer,dt as GoogleMarkerClusterer,sn as GroundOverlay,nn as GroundOverlayF,ln as HeatmapLayer,an as HeatmapLayerF,Ee as InfoBox,Se as InfoBoxF,mt as InfoWindow,ct as InfoWindowF,Zt as KmlLayer,Z as LoadScript,H as LoadScriptNext,Kt as MAP_PANE,Yt as MARKER_LAYER,b as MapContext,de as Marker,Ce as MarkerClusterer,be as MarkerClustererF,he as MarkerF,qt as OVERLAY_LAYER,Jt as OVERLAY_MOUSE_TARGET,Qt as OverlayView,Xt as OverlayViewF,kt as Polygon,xt as PolygonF,bt as Polyline,yt as PolylineF,Et as Rectangle,St as RectangleF,bn as StandaloneSearchBox,dn as StreetViewPanorama,gn as StreetViewService,X as TrafficLayer,J as TrafficLayerF,ne as TransitLayer,te as TransitLayerF,C as useGoogleMap,K as useJsApiLoader,V as useLoadScript};
//# sourceMappingURL=esm.min.js.map
