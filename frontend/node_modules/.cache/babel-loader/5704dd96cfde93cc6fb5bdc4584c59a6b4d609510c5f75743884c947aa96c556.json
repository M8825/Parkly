{"ast":null,"code":"import Geocode from \"react-geocode\";\nconst RECEIVE_LAT_LNG = \"geocode/RECEIVE_LAT_LNG\";\nconst receiveLatLng = coordinates => ({\n  type: RECEIVE_LAT_LNG,\n  coordinates\n});\nexport const getLatLngByAddress = address => async dispatch => {\n  try {\n    Geocode.setApiKey(\"AIzaSyDjeZ25bTcc8oOxF2TZiu9Co42kqbMKcBU\");\n    const response = await Geocode.fromAddress(address);\n    if (response.status === \"OK\") {\n      const {\n        lat,\n        lng\n      } = response.results[0].geometry.location;\n      dispatch(receiveLatLng({\n        lat,\n        lng\n      }));\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst geocodeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const newState = Object.assign({}, state);\n  switch (action.type) {\n    case RECEIVE_LAT_LNG:\n      newState.geocode = action.coordinates;\n      return newState;\n    default:\n      return newState;\n  }\n  ;\n};\nexport default geocodeReducer;","map":{"version":3,"names":["Geocode","RECEIVE_LAT_LNG","receiveLatLng","coordinates","type","getLatLngByAddress","address","dispatch","setApiKey","response","fromAddress","status","lat","lng","results","geometry","location","error","console","geocodeReducer","state","action","newState","Object","assign","geocode"],"sources":["/Users/josephbergmann/Desktop/aaclass/parkly/Parkly/frontend/src/store/geocodeReducer.js"],"sourcesContent":["import Geocode from \"react-geocode\";\n\nconst RECEIVE_LAT_LNG = \"geocode/RECEIVE_LAT_LNG\";\n\nconst receiveLatLng = (coordinates) => ({\n    type: RECEIVE_LAT_LNG,\n    coordinates,\n});\n\nexport const getLatLngByAddress = (address) => async (dispatch) =>  {\n\ttry {\n\t\tGeocode.setApiKey(\"AIzaSyDjeZ25bTcc8oOxF2TZiu9Co42kqbMKcBU\");\n\t\tconst response = await Geocode.fromAddress(address);\n\n        if (response.status === \"OK\") {\n            const { lat, lng } = response.results[0].geometry.location;\n            dispatch(receiveLatLng({ lat, lng }));\n        }\n\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n};\n\n\n\nconst geocodeReducer = (state = {}, action) => {\n    const newState = Object.assign({}, state);\n\n    switch (action.type) {\n        case RECEIVE_LAT_LNG:\n            newState.geocode = action.coordinates;\n            return newState;\n        default:\n            return newState\n    };\n\n}\n\n\nexport default geocodeReducer;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,eAAe;AAEnC,MAAMC,eAAe,GAAG,yBAAyB;AAEjD,MAAMC,aAAa,GAAIC,WAAW,KAAM;EACpCC,IAAI,EAAEH,eAAe;EACrBE;AACJ,CAAC,CAAC;AAEF,OAAO,MAAME,kBAAkB,GAAIC,OAAO,IAAK,MAAOC,QAAQ,IAAM;EACnE,IAAI;IACHP,OAAO,CAACQ,SAAS,CAAC,yCAAyC,CAAC;IAC5D,MAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACU,WAAW,CAACJ,OAAO,CAAC;IAE7C,IAAIG,QAAQ,CAACE,MAAM,KAAK,IAAI,EAAE;MAC1B,MAAM;QAAEC,GAAG;QAAEC;MAAI,CAAC,GAAGJ,QAAQ,CAACK,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACC,QAAQ;MAC1DT,QAAQ,CAACL,aAAa,CAAC;QAAEU,GAAG;QAAEC;MAAI,CAAC,CAAC,CAAC;IACzC;EAEP,CAAC,CAAC,OAAOI,KAAK,EAAE;IACfC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACrB;AACD,CAAC;AAID,MAAME,cAAc,GAAG,YAAwB;EAAA,IAAvBC,KAAK,uEAAG,CAAC,CAAC;EAAA,IAAEC,MAAM;EACtC,MAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,KAAK,CAAC;EAEzC,QAAQC,MAAM,CAACjB,IAAI;IACf,KAAKH,eAAe;MAChBqB,QAAQ,CAACG,OAAO,GAAGJ,MAAM,CAAClB,WAAW;MACrC,OAAOmB,QAAQ;IACnB;MACI,OAAOA,QAAQ;EAAA;EACtB;AAEL,CAAC;AAGD,eAAeH,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}